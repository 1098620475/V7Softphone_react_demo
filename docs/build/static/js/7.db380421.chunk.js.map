{"version":3,"sources":["pages/menus/EditModal.jsx","pages/menus/BatchAddModal.jsx","pages/menus/index.jsx","../delegated 59 from dll-reference reactVendor_176180990e8e122c54da"],"names":["targetOptions","value","label","EditModal","config","ajax","modal","width","title","props","data","key","type","state","loading","iconVisible","handleSubmit","values","console","log","parentKey","ajaxMethod","put","post","ajaxUrl","onOk","setState","id","parentId","then","visible","finally","handleCancel","onCancel","this","icon","isMenu","formProps","labelWidth","surplusSpace","okText","form","submit","cancelText","resetFields","ref","onFinish","style","padding","initialValues","name","required","autoFocus","labelTip","min","step","options","Component","BatchAddModal","menus","menusJson","JSON5","parse","Array","isArray","forEach","item","colon","rows","rules","validator","rule","Promise","resolve","e","reject","message","placeholder","index","path","batchAddVisible","record","columns","dataIndex","render","option","find","url","color","items","onClick","confirm","onConfirm","handleDeleteNode","handleAddTopMenu","del","handleSearch","getMenus","res","map","orderedData","sort","a","b","aOrder","order","bOrder","text","menuTreeData","tree","convertToTree","dataSource","pagination","module","exports","__webpack_require__"],"mappings":"+QAKaA,EAAgB,CACzB,CAAEC,MAAO,GAAIC,MAAO,wCACpB,CAAED,MAAO,QAASC,MAAO,wCACzB,CAAED,MAAO,SAAUC,MAAO,mCAkBTC,EAfpBC,YAAO,CACJC,MAAM,EACNC,MAAO,CACHC,MAAO,IACPC,MAAO,SAAAC,GAAU,IAAD,EACUA,EAAdC,YADI,MACG,GADH,EAEJC,EAAcD,EAAdC,IAGR,MAFwB,MADFD,EAATE,KAGMD,EAAM,2BAAS,2BAE3BA,EAAM,2BAAS,8B,+MAK9BE,MAAQ,CACJC,SAAS,EACTC,aAAa,G,EAGjBC,aAAe,SAACC,GACZ,IAAI,EAAKJ,MAAMC,QAAf,CAEAI,QAAQC,IAAI,4BAA6BF,GAHlB,IAMfN,EAAmBM,EAAnBN,IAAKS,EAAcH,EAAdG,UACPC,EAAaV,EAAM,EAAKF,MAAMJ,KAAKiB,IAAM,EAAKb,MAAMJ,KAAKkB,KACzDC,EAAUb,EAAG,iBAAaA,GAAQ,SAChCc,EAAS,EAAKhB,MAAdgB,KAER,EAAKC,SAAS,CAAEZ,SAAS,IACzBO,EAAWG,EAAD,eAAeP,EAAf,CAAuBU,GAAIhB,EAAKiB,SAAUR,KAC/CS,MAAK,WACF,EAAKH,SAAS,CAAEI,SAAS,IACzBL,GAAQA,OAEXM,SAAQ,kBAAM,EAAKL,SAAS,CAAEZ,SAAS,S,EAGhDkB,aAAe,WAAO,IACVC,EAAa,EAAKxB,MAAlBwB,SACJA,GAAUA,K,uDAGR,IAAD,OACGvB,EAASwB,KAAKzB,MAAdC,KACAI,EAAYoB,KAAKrB,MAAjBC,QACAF,EAAwBF,EAAxBE,KAHH,EAG2BF,EAAlByB,YAHT,MAGgB,OAHhB,EAICC,GAAUxB,GAAiB,MAATA,EAElByB,EAAY,CACd9B,MAAO,IACP+B,WAAY,IAEhB,OACI,kBAAC,IAAD,CACIC,cAAc,EACdzB,QAASA,EACT0B,OAAO,eACPf,KAAM,kBAAM,EAAKgB,KAAKC,UACtBC,WAAW,eACXV,SAAU,kBAAM,EAAKQ,KAAKG,gBAE1B,6BACIC,IAAK,SAAAJ,GAAI,OAAI,EAAKA,KAAOA,GACzBK,SAAUZ,KAAKlB,aACf+B,MAAO,CAAEC,QAAS,IAClBC,cAAa,eAAOvC,EAAP,CAAayB,UAE1B,kBAAC,IAAD,iBAAiBE,EAAjB,CAA4BzB,KAAK,SAASsC,KAAK,SAC/C,kBAAC,IAAD,iBAAiBb,EAAjB,CAA4BzB,KAAK,SAASsC,KAAK,eAC/C,kBAAC,IAAD,iBAAiBb,EAAjB,CAA4BzB,KAAK,SAASsC,KAAK,UAC/C,kBAAC,IAAD,KACI,kBAAC,IAAD,iBACQb,EADR,CAEInC,MAAM,eACNgD,KAAK,OACLC,UAAQ,EACRC,WAAS,KAGZhB,EACG,kBAAC,IAAD,iBACQC,EADR,CAEI9B,MAAO,IACPL,MAAM,eACNgD,KAAK,SAEL,kBAAC,IAAD,OAGJ,kBAAC,IAAD,iBACQb,EADR,CAEI9B,MAAM,OACNL,MAAM,eACNgD,KAAK,OACLC,UAAQ,EACRE,SAAS,4JAIhBjB,EACG,kBAAC,IAAD,iBACQC,EADR,CAEIC,WAAW,OACX/B,MAAO,IACPL,MAAM,eACNU,KAAK,SACLsC,KAAK,QACLI,IAAK,EACLC,KAAM,KAEV,MAER,kBAAC,IAAD,OACK,OAAC7C,QAAD,IAACA,OAAD,EAACA,EAAMU,YACJ,kBAAC,IAAD,iBACQiB,EADR,CAEInC,MAAM,2BACNgD,KAAK,WACLG,SAAS,iOAGjB,kBAAC,IAAD,iBACQhB,EADR,CAEInC,MAAM,eACNgD,KAAK,OACLG,SAAS,2RAGhBjB,EACG,kBAAC,IAAD,KACI,kBAAC,IAAD,iBACQC,EADR,CAEInC,MAAM,MACNgD,KAAK,MACLG,SAAS,qNAEb,kBAAC,IAAD,iBACQhB,EADR,CAEIzB,KAAK,SACLV,MAAM,SACNgD,KAAK,SACLM,QAASxD,EACTqD,SAAS,uGAGjB,W,GAtIeI,e,oBCblBC,EAPpBtD,YAAO,CACJC,MAAM,EACNC,MAAO,CACHC,MAAO,IACPC,MAAO,6B,+MAIXK,MAAQ,CACJC,SAAS,EACTC,aAAa,G,EAGjBC,aAAe,SAACC,GACZ,IAAI,EAAKJ,MAAMC,QAAf,CADuB,IAGf6C,EAAqB1C,EAArB0C,MAAOvC,EAAcH,EAAdG,UACXwC,EAAYC,IAAMC,MAAMH,GACvBI,MAAMC,QAAQJ,KACfA,EAAY,CAAEA,IAElBA,EAAUK,SAAQ,SAAAC,GACTA,EAAK9C,YAAW8C,EAAK9C,UAAYA,GACjC8C,EAAK/B,OAAM+B,EAAK/B,KAAO,QAE5B+B,EAAKvC,GAAKuC,EAAKvD,IACfuD,EAAKtC,SAAWsC,EAAK9C,aAbF,IAgBfK,EAAS,EAAKhB,MAAdgB,KAER,EAAKC,SAAS,CAAEZ,SAAS,IACzB,EAAKL,MAAMJ,KAAKkB,KAAK,iBAAkB,CAAEoC,MAAOC,IAC3C/B,MAAK,WACF,EAAKH,SAAS,CAAEI,SAAS,IACzBL,GAAQA,OAEXM,SAAQ,kBAAM,EAAKL,SAAS,CAAEZ,SAAS,S,EAGhDkB,aAAe,WAAO,IACVC,EAAa,EAAKxB,MAAlBwB,SACJA,GAAUA,K,uDAGR,IAAD,OACGvB,EAASwB,KAAKzB,MAAdC,KACAI,EAAYoB,KAAKrB,MAAjBC,QAEFuB,EAAY,CACdC,WAAY,GAEhB,OACI,kBAAC,IAAD,CACIC,cAAc,EACdzB,QAASA,EACT0B,OAAO,eACPf,KAAM,kBAAM,EAAKgB,KAAKC,UACtBC,WAAW,eACXV,SAAU,kBAAM,EAAKQ,KAAKG,gBAE1B,6BACIC,IAAK,SAAAJ,GAAI,OAAI,EAAKA,KAAOA,GACzBK,SAAUZ,KAAKlB,aACf+B,MAAO,CAAEC,QAAS,IAClBC,cAAa,eAAOvC,IAEpB,kBAAC,IAAD,iBAAiB2B,EAAjB,CAA4BzB,KAAK,SAASsC,KAAK,eAC/C,kBAAC,IAAD,iBACQb,EADR,CAEIzB,KAAK,WACLV,MAAM,eACNgD,KAAK,QACLiB,OAAO,EACPC,KAAM,GACNjB,UAAQ,EACRC,WAAS,EACTiB,MAAO,CACH,CACIC,UAAW,SAACC,EAAMtE,GACd,IAAKA,EAAO,OAAOuE,QAAQC,UAE3B,IAEI,OADAZ,IAAMC,MAAM7D,GACLuE,QAAQC,UACjB,MAAOC,GACL,OAAOF,QAAQG,OAAOD,EAAEE,aAKxCC,YAAW,+vC,GApFQpB,e,qBCEtBqB,EAHpB1E,YAAO,CACJ2E,KAAM,U,+MAGNlE,MAAQ,CACJC,SAAS,EACT6C,MAAO,GACP7B,SAAS,EACTkD,iBAAiB,EACjBC,OAAQ,GACRlE,aAAa,G,EAGjBmE,QAAU,CACN,CACI1E,MAAO,eAAM2E,UAAW,OAAQxE,IAAK,OAAQJ,MAAO,IACpD6E,OAAQ,SAACnF,EAAOgF,GAAY,IAChB9C,EAAS8C,EAAT9C,KAER,OAAIA,EAAa,8BAAM,kBAAC,IAAD,CAAMvB,KAAMuB,IAAlB,IAA2BlC,GAErCA,IAGf,CAAEO,MAAO,2BAAQ2E,UAAW,WAAYxE,IAAK,WAAYJ,MAAO,KAChE,CAAEC,MAAO,eAAM2E,UAAW,OAAQxE,IAAK,QACvC,CAAEH,MAAO,MAAO2E,UAAW,MAAOxE,IAAK,MAAOJ,MAAO,KACrD,CACIC,MAAO,SAAU2E,UAAW,SAAUxE,IAAK,SAAUJ,MAAO,GAC5D6E,OAAQ,SAAAnF,GACJ,IAAMoF,EAASrF,EAAcsF,MAAK,SAAApB,GAAI,OAAIA,EAAKjE,QAAUA,KAEzD,cAAOoF,QAAP,IAAOA,OAAP,EAAOA,EAAQnF,QAGvB,CACIM,MAAO,eAAM2E,UAAW,OAAQxE,IAAK,OAAQJ,MAAO,GACpD6E,OAAQ,SAACnF,EAAOgF,GAEZ,OADgBA,EAARM,IACQ,0BAAMxC,MAAO,CAAEyC,MAAO,WAAtB,gBACF,MAAVvF,EAAsB,0BAAM8C,MAAO,CAAEyC,MAAO,UAAtB,gBACZ,MAAVvF,EAAsB,0BAAM8C,MAAO,CAAEyC,MAAO,WAAtB,gBAEnB,0BAAMzC,MAAO,CAAEyC,MAAO,UAAtB,kBAIf,CAAEhF,MAAO,eAAM2E,UAAW,QAASxE,IAAK,QAASJ,MAAO,IACxD,CACIC,MAAO,eAAM2E,UAAW,WAAYxE,IAAK,WAAYJ,MAAO,IAC5D6E,OAAQ,SAACnF,EAAOgF,GAAW,MAEAA,EAAfrE,YAFe,MAER,IAFQ,EAGjB6E,EAAQ,CACV,CACIvF,MAAO,eACPiC,KAAM,OACNuD,QAAS,kBAAM,EAAKhE,SAAS,CAAEhB,KAAK,eAAMuE,EAAP,CAAerE,SAAQkB,SAAS,MAEvE,CACI5B,MAAO,eACPiC,KAAM,SACNqD,MAAO,MACPG,QAAS,CACLnF,MAAO,yGACPoF,UAAW,kBAAM,EAAKC,iBAAiBZ,MAG/C,CACI/E,MAAO,iCACPiC,KAAM,aACNuD,QAAS,kBAAM,EAAKhE,SAAS,CAAEhB,KAAM,CAAEU,UAAW6D,EAAOtE,IAAKC,KAAM,KAAOkB,SAAS,MAExF,CACI5B,MAAO,iCACPiC,KAAM,WACNuD,QAAS,kBAAM,EAAKhE,SAAS,CAAEhB,KAAM,CAAEU,UAAW6D,EAAOtE,IAAKC,KAAM,KAAOkB,SAAS,MAExF,CACI5B,MAAO,6CACPiC,KAAM,OACNuD,QAAS,kBAAM,EAAKhE,SAAS,CAAEhB,KAAM,CAAEU,UAAW6D,EAAOtE,KAAOqE,iBAAiB,OAGzF,OAAO,kBAAC,IAAD,CAAUS,MAAOA,O,EAoCpCK,iBAAmB,WACf,EAAKpE,SAAS,CAAEhB,KAAM,CAAEE,KAAM,KAAOkB,SAAS,K,EAGlD+D,iBAAmB,SAACZ,GAAY,IACpBtD,EAAOsD,EAAPtD,GACR,EAAKD,SAAS,CAAEZ,SAAS,IACzB,EAAKL,MAAMJ,KACN0F,IADL,iBACmBpE,IACdE,MAAK,WACF,EAAKH,SAAS,CAAEI,SAAS,IACzB,EAAKkE,kBAERjE,SAAQ,kBAAM,EAAKL,SAAS,CAAEZ,SAAS,Q,kEA3C5CoB,KAAK8D,iB,qCAGO,IAAD,OACX9D,KAAKR,SAAS,CAAEZ,SAAS,IAGzBmF,cACKpE,MAAK,SAAAqE,GACF,IAAMvC,EAAQuC,EAAIC,KAAI,SAAAjC,GAAI,oBAAOvD,IAAKuD,EAAKvC,GAAIP,UAAW8C,EAAKtC,UAAasC,MAEtEkC,EAAc,YAAKzC,GAAQ0C,MAAK,SAACC,EAAGC,GACtC,IAAMC,EAASF,EAAEG,OAAS,EACpBC,EAASH,EAAEE,OAAS,EAG1B,OAAKD,GAAWE,EAITA,EAASF,EAHLF,EAAEK,KAAOJ,EAAEI,KAAO,GAAK,KAMhCC,EAAeC,IAAKC,cAAcV,GAExC,EAAK1E,SAAS,CAAEiC,MAAOiD,OAE1B7E,SAAQ,kBAAM,EAAKL,SAAS,CAAEZ,SAAS,S,+BAmBtC,IAAD,SAODoB,KAAKrB,MALL8C,EAFC,EAEDA,MACA7B,EAHC,EAGDA,QACAkD,EAJC,EAIDA,gBACAlE,EALC,EAKDA,QACAJ,EANC,EAMDA,KAGJ,OACI,kBAAC,IAAD,CAAa,UAAU,cACnB,kBAAC,IAAD,KACI,6BAAQE,KAAK,UAAU8E,QAASxD,KAAK4D,kBAArC,6BAGJ,kBAAC,IAAD,CACIhF,QAASA,EACToE,QAAShD,KAAKgD,QACd6B,WAAYpD,EACZqD,YAAY,IAEhB,kBAAC,EAAD,CACIlF,QAASA,EACTpB,KAAMA,EACNe,KAAM,kBAAM,EAAKC,SAAS,CAAEI,SAAS,GAAS,EAAKkE,eACnD/D,SAAU,kBAAM,EAAKP,SAAS,CAAEI,SAAS,OAE7C,kBAAC,EAAD,CACIA,QAASkD,EACTtE,KAAMA,EACNe,KAAM,kBAAM,EAAKC,SAAS,CAAEsD,iBAAiB,GAAS,EAAKgB,eAC3D/D,SAAU,kBAAM,EAAKP,SAAS,CAAEsD,iBAAiB,Y,GApKlCvB,e,uBCfnCwD,EAAOC,QAAWC,EAAoB,EAArB,CAAyB,K","file":"static/js/7.db380421.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'antd';\nimport { FormElement, FormRow, IconPicker, ModalContent } from 'ra-lib';\nimport config from 'src/commons/config-hoc';\n\nexport const targetOptions = [\n    { value: '', label: '项目内部窗口' },\n    { value: '_self', label: '替换当前窗口' },\n    { value: '_blank', label: '打开新窗口' },\n];\n\n@config({\n    ajax: true,\n    modal: {\n        width: 700,\n        title: props => {\n            const { data = {} } = props;\n            const { key, type } = data;\n            const isMenu = type === '1';\n\n            if (isMenu) return key ? '编辑菜单' : '添加菜单';\n\n            return key ? '编辑功能' : '添加功能';\n        },\n    },\n})\nexport default class EditModal extends Component {\n    state = {\n        loading: false,\n        iconVisible: false,\n    };\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n\n        console.log('Received values of form: ', values);\n\n        // 如果key存在视为修改，其他为添加\n        const { key, parentKey } = values;\n        const ajaxMethod = key ? this.props.ajax.put : this.props.ajax.post;\n        const ajaxUrl = key ? `/menus/${key}` : '/menus';\n        const { onOk } = this.props;\n\n        this.setState({ loading: true });\n        ajaxMethod(ajaxUrl, { ...values, id: key, parentId: parentKey })\n            .then(() => {\n                this.setState({ visible: false });\n                onOk && onOk();\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        if (onCancel) onCancel();\n    };\n\n    render() {\n        const { data } = this.props;\n        const { loading } = this.state;\n        const { type, icon = 'bars' } = data;\n        const isMenu = !type || type === '1';\n\n        const formProps = {\n            width: 300,\n            labelWidth: 80,\n        };\n        return (\n            <ModalContent\n                surplusSpace={false}\n                loading={loading}\n                okText=\"保存\"\n                onOk={() => this.form.submit()}\n                cancelText=\"重置\"\n                onCancel={() => this.form.resetFields()}\n            >\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                    style={{ padding: 16 }}\n                    initialValues={{ ...data, icon }}\n                >\n                    <FormElement {...formProps} type=\"hidden\" name=\"key\"/>\n                    <FormElement {...formProps} type=\"hidden\" name=\"parentKey\"/>\n                    <FormElement {...formProps} type=\"hidden\" name=\"type\"/>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"名称\"\n                            name=\"text\"\n                            required\n                            autoFocus\n                        />\n\n                        {isMenu ? (\n                            <FormElement\n                                {...formProps}\n                                width={180}\n                                label=\"图标\"\n                                name=\"icon\"\n                            >\n                                <IconPicker/>\n                            </FormElement>\n                        ) : (\n                            <FormElement\n                                {...formProps}\n                                width=\"auto\"\n                                label=\"编码\"\n                                name=\"code\"\n                                required\n                                labelTip=\"唯一标识，硬编码，前端一般会用于控制按钮是否显示。\"\n                            />\n                        )}\n\n                        {isMenu ? (\n                            <FormElement\n                                {...formProps}\n                                labelWidth=\"auto\"\n                                width={120}\n                                label=\"排序\"\n                                type=\"number\"\n                                name=\"order\"\n                                min={0}\n                                step={1}\n                            />\n                        ) : null}\n                    </FormRow>\n                    <FormRow>\n                        {!data?.parentKey && (\n                            <FormElement\n                                {...formProps}\n                                label=\"基础路径\"\n                                name=\"basePath\"\n                                labelTip=\"菜单对应的页面基础地质地址，所有的子菜单「路径」「url」会拼接此「基础路径」\"\n                            />\n                        )}\n                        <FormElement\n                            {...formProps}\n                            label=\"路径\"\n                            name=\"path\"\n                            labelTip=\"菜单对应的页面地址，或者功能对应的页面地址。前端会基于用户所拥有的「路径」，对路由进行过滤。\"\n                        />\n                    </FormRow>\n                    {isMenu ? (\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                label=\"url\"\n                                name=\"url\"\n                                labelTip=\"iframe方式接入第三方网站的url，如果存在「基础路径」，会与基础路径进行拼接。\"\n                            />\n                            <FormElement\n                                {...formProps}\n                                type=\"select\"\n                                label=\"target\"\n                                name=\"target\"\n                                options={targetOptions}\n                                labelTip=\"iframe方式接入的第三方网站打开方式。\"\n                            />\n                        </FormRow>\n                    ) : null}\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Form } from 'antd';\nimport { FormElement, ModalContent } from 'ra-lib';\nimport JSON5 from 'json5';\nimport config from 'src/commons/config-hoc';\n\n@config({\n    ajax: true,\n    modal: {\n        width: 1000,\n        title: '批量添加',\n    },\n})\nexport default class BatchAddModal extends Component {\n    state = {\n        loading: false,\n        iconVisible: false,\n    };\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n\n        const { menus, parentKey } = values;\n        let menusJson = JSON5.parse(menus);\n        if (!Array.isArray(menusJson)) {\n            menusJson = [ menusJson ];\n        }\n        menusJson.forEach(item => {\n            if (!item.parentKey) item.parentKey = parentKey;\n            if (!item.icon) item.icon = 'bars';\n\n            item.id = item.key;\n            item.parentId = item.parentKey;\n        });\n\n        const { onOk } = this.props;\n\n        this.setState({ loading: true });\n        this.props.ajax.post('/batchAddMenus', { menus: menusJson })\n            .then(() => {\n                this.setState({ visible: false });\n                onOk && onOk();\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        if (onCancel) onCancel();\n    };\n\n    render() {\n        const { data } = this.props;\n        const { loading } = this.state;\n\n        const formProps = {\n            labelWidth: 0,\n        };\n        return (\n            <ModalContent\n                surplusSpace={false}\n                loading={loading}\n                okText=\"保存\"\n                onOk={() => this.form.submit()}\n                cancelText=\"重置\"\n                onCancel={() => this.form.resetFields()}\n            >\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                    style={{ padding: 16 }}\n                    initialValues={{ ...data }}\n                >\n                    <FormElement {...formProps} type=\"hidden\" name=\"parentKey\"/>\n                    <FormElement\n                        {...formProps}\n                        type=\"textarea\"\n                        label=\"名称\"\n                        name=\"menus\"\n                        colon={false}\n                        rows={20}\n                        required\n                        autoFocus\n                        rules={[\n                            {\n                                validator: (rule, value) => {\n                                    if (!value) return Promise.resolve();\n\n                                    try {\n                                        JSON5.parse(value);\n                                        return Promise.resolve();\n                                    } catch (e) {\n                                        return Promise.reject(e.message);\n                                    }\n                                },\n                            },\n                        ]}\n                        placeholder={`批量添加菜单、功能，格式如下：\n[\n    { key: 'antDesign', text: 'Ant Design 官网', icon: 'ant-design', url: 'https://ant-design.gitee.io', target: '', order: 2000 },\n    { key: 'document', text: '文档', icon: 'book', url: 'http://shubin.wang/docs', target: '_blank', order: 1200 },\n    { key: 'customer-header', text: '自定义头部', icon: 'api', path: '/example/customer-header', order: 998 },\n    { key: 'user', text: '用户管理', icon: 'user', path: '/users', order: 900 },\n    { key: 'role', text: '角色管理', icon: 'lock', path: '/roles', order: 900 },\n    { key: 'menu', text: '菜单管理', icon: 'align-left', path: '/menu', order: 900 },\n    { key: 'gen', text: '代码生成', icon: 'code', path: '/gen', order: 900 },\n    { key: 'page404', text: '404页面不存在', icon: 'file-search', path: '/404', order: 700 },\n    { key: 'example', text: '示例', icon: 'align-left', order: 600 },\n    { key: 'table-editable', parentKey: 'example', text: '可编辑表格', icon: 'align-left', path: '/example/table-editable', order: 600 },\n]\n                        `}\n                    />\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { Icon } from 'ra-lib';\nimport config from 'src/commons/config-hoc';\nimport { PageContent } from 'ra-lib';\nimport { tree } from 'ra-lib';\nimport { Table, ToolBar, Operator } from 'ra-lib';\nimport EditModal, { targetOptions } from './EditModal';\nimport BatchAddModal from './BatchAddModal';\nimport getMenus from 'src/menus';\nimport './style.less';\n\n@config({\n    path: '/menus',\n})\nexport default class index extends Component {\n    state = {\n        loading: false,\n        menus: [],\n        visible: false,\n        batchAddVisible: false,\n        record: {},\n        iconVisible: false,\n    };\n\n    columns = [\n        {\n            title: '名称', dataIndex: 'text', key: 'text', width: 300,\n            render: (value, record) => {\n                const { icon } = record;\n\n                if (icon) return <span><Icon type={icon}/> {value}</span>;\n\n                return value;\n            },\n        },\n        { title: '基础路径', dataIndex: 'basePath', key: 'basePath', width: 150 },\n        { title: '路径', dataIndex: 'path', key: 'path' },\n        { title: 'url', dataIndex: 'url', key: 'url', width: 100 },\n        {\n            title: 'target', dataIndex: 'target', key: 'target', width: 60,\n            render: value => {\n                const option = targetOptions.find(item => item.value === value);\n\n                return option?.label;\n            },\n        },\n        {\n            title: '类型', dataIndex: 'type', key: 'type', width: 60,\n            render: (value, record) => {\n                const { url } = record;\n                if (url) return <span style={{ color: 'purple' }}>外站</span>;\n                if (value === '1') return <span style={{ color: 'green' }}>菜单</span>;\n                if (value === '2') return <span style={{ color: 'orange' }}>功能</span>;\n\n                return <span style={{ color: 'green' }}>菜单</span>;\n            },\n        },\n        // { title: '功能编码', dataIndex: 'code', key: 'code', width: 100 },\n        { title: '排序', dataIndex: 'order', key: 'order', width: 60 },\n        {\n            title: '操作', dataIndex: 'operator', key: 'operator', width: 180,\n            render: (value, record) => {\n                // 要有type\n                const { type = '1' } = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        icon: 'form',\n                        onClick: () => this.setState({ data: { ...record, type }, visible: true }),\n                    },\n                    {\n                        label: '删除',\n                        icon: 'delete',\n                        color: 'red',\n                        confirm: {\n                            title: '您请确定要删除此节点及其子节点吗？',\n                            onConfirm: () => this.handleDeleteNode(record),\n                        },\n                    },\n                    {\n                        label: '添加子菜单',\n                        icon: 'folder-add',\n                        onClick: () => this.setState({ data: { parentKey: record.key, type: '1' }, visible: true }),\n                    },\n                    {\n                        label: '添加子功能',\n                        icon: 'file-add',\n                        onClick: () => this.setState({ data: { parentKey: record.key, type: '2' }, visible: true }),\n                    },\n                    {\n                        label: '批量添加子菜单',\n                        icon: 'bars',\n                        onClick: () => this.setState({ data: { parentKey: record.key }, batchAddVisible: true }),\n                    },\n                ];\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch() {\n        this.setState({ loading: true });\n        // this.props.ajax\n        //     .get('/menus')\n        getMenus()\n            .then(res => {\n                const menus = res.map(item => ({ key: item.id, parentKey: item.parentId, ...item }));\n                // 菜单根据order 排序\n                const orderedData = [ ...menus ].sort((a, b) => {\n                    const aOrder = a.order || 0;\n                    const bOrder = b.order || 0;\n\n                    // 如果order都不存在，根据 text 排序\n                    if (!aOrder && !bOrder) {\n                        return a.text > b.text ? 1 : -1;\n                    }\n\n                    return bOrder - aOrder;\n                });\n\n                const menuTreeData = tree.convertToTree(orderedData);\n\n                this.setState({ menus: menuTreeData });\n            })\n            .finally(() => this.setState({ loading: false }));\n    }\n\n    handleAddTopMenu = () => {\n        this.setState({ data: { type: '1' }, visible: true });\n    };\n\n    handleDeleteNode = (record) => {\n        const { id } = record;\n        this.setState({ loading: true });\n        this.props.ajax\n            .del(`/menus/${id}`)\n            .then(() => {\n                this.setState({ visible: false });\n                this.handleSearch();\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    render() {\n        const {\n            menus,\n            visible,\n            batchAddVisible,\n            loading,\n            data,\n        } = this.state;\n\n        return (\n            <PageContent styleName=\"root\">\n                <ToolBar>\n                    <Button type=\"primary\" onClick={this.handleAddTopMenu}>添加顶级</Button>\n                </ToolBar>\n\n                <Table\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={menus}\n                    pagination={false}\n                />\n                <EditModal\n                    visible={visible}\n                    data={data}\n                    onOk={() => this.setState({ visible: false }, this.handleSearch)}\n                    onCancel={() => this.setState({ visible: false })}\n                />\n                <BatchAddModal\n                    visible={batchAddVisible}\n                    data={data}\n                    onOk={() => this.setState({ batchAddVisible: false }, this.handleSearch)}\n                    onCancel={() => this.setState({ batchAddVisible: false })}\n                />\n            </PageContent>\n        );\n    }\n}\n\n","module.exports = (__webpack_require__(5))(59);"],"sourceRoot":""}