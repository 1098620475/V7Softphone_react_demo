{"version":3,"sources":["pages/menu-permission/EditModal.jsx","pages/menu-permission/index.jsx"],"names":["EditModal","config","ajax","modal","width","title","props","data","key","type","state","loading","iconVisible","handleSubmit","values","console","log","put","post","onOk","setState","then","visible","finally","handleCancel","onCancel","this","isMenu","formProps","labelWidth","surplusSpace","okText","form","submit","cancelText","resetFields","ref","onFinish","style","padding","initialValues","name","label","required","labelTip","min","step","options","value","Component","index","path","text","icon","menus","record","columns","dataIndex","render","items","onClick","color","confirm","onConfirm","handleDeleteNode","parentKey","handleAddTopMenu","del","handleSearch","localMenus","orderedData","sort","a","b","aOrder","order","bOrder","menuTreeData","convertToTree","dataSource","pagination"],"mappings":"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","file":"static/js/15.e85a7f81.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Form} from 'antd';\nimport {FormElement, FormRow, IconPicker, ModalContent} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\n\n@config({\n    ajax: true,\n    modal: {\n        width: 700,\n        title: props => {\n            const {data = {}} = props;\n            const {key, type} = data;\n            const isMenu = type === '1';\n\n            if (isMenu) return key ? '编辑菜单' : '添加菜单';\n\n            return key ? '编辑功能' : '添加功能';\n        },\n    },\n})\nexport default class EditModal extends Component {\n    state = {\n        loading: false,\n        iconVisible: false,\n    };\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n\n        console.log('Received values of form: ', values);\n\n        // 如果key存在视为修改，其他为添加\n        const {key} = values;\n        const ajax = key ? this.props.ajax.put : this.props.ajax.post;\n        const {onOk} = this.props;\n\n        // TODO\n        this.setState({loading: true});\n        ajax('/menus', values)\n            .then(() => {\n                this.setState({visible: false});\n                onOk && onOk();\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleCancel = () => {\n        const {onCancel} = this.props;\n        if (onCancel) onCancel();\n    };\n\n    render() {\n        const {data} = this.props;\n        const {loading} = this.state;\n        const {type} = data;\n        const isMenu = type === '1';\n\n        const formProps = {\n            labelWidth: 70,\n        };\n        return (\n            <ModalContent\n                surplusSpace={false}\n                loading={loading}\n                okText=\"保存\"\n                onOk={() => this.form.submit()}\n                cancelText=\"重置\"\n                onCancel={() => this.form.resetFields()}\n            >\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                    style={{padding: 16}}\n                    initialValues={data}\n                >\n                    <FormElement {...formProps} type=\"hidden\" name=\"key\"/>\n                    <FormElement {...formProps} type=\"hidden\" name=\"parentKey\"/>\n                    <FormElement {...formProps} type=\"hidden\" name=\"type\"/>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"名称\"\n                            name=\"text\"\n                            required\n                        />\n                        {isMenu ? (\n                            <FormElement\n                                {...formProps}\n                                label=\"图标\"\n                                name=\"icon\"\n                            >\n                                <IconPicker/>\n                            </FormElement>\n                        ) : (\n                            <FormElement\n                                {...formProps}\n                                label=\"编码\"\n                                name=\"code\"\n                                required\n                                labelTip=\"唯一标识，硬编码，前端一般会用于控制按钮是否显示。\"\n                            />\n                        )}\n                    </FormRow>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"path\"\n                            name=\"path\"\n                            labelTip=\"菜单对应的页面地址，或者功能对应的页面地址。前端会基于用户所拥有的path，对路由进行过滤。\"\n                        />\n                        {isMenu ? (\n                            <FormElement\n                                {...formProps}\n                                label=\"排序\"\n                                type=\"number\"\n                                name=\"order\"\n                                min={0}\n                                step={1}\n                            />\n                        ) : null}\n                    </FormRow>\n                    {isMenu ? (\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                label=\"url\"\n                                name=\"url\"\n                            />\n                            <FormElement\n                                {...formProps}\n                                type=\"select\"\n                                label=\"target\"\n                                name=\"target\"\n                                options={[\n                                    {value: '', label: '项目内部窗口'},\n                                    {value: '_self', label: '替换当前窗口'},\n                                    {value: '_blank', label: '打开新窗口'},\n                                ]}\n                            />\n                        </FormRow>\n                    ) : null}\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Button} from 'antd';\nimport {Icon} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport localMenus from '../../menus';\nimport {convertToTree} from 'src/library/utils/tree-utils';\nimport {Table, ToolBar, Operator} from 'src/library/components';\nimport EditModal from './EditModal';\nimport './style.less';\n\n@config({\n    path: '/menu-permission',\n    title: {text: '菜单&权限', icon: 'lock'},\n    ajax: true,\n})\nexport default class index extends Component {\n    state = {\n        loading: false,\n        menus: [],\n        visible: false,\n        record: {},\n        iconVisible: false,\n    };\n\n    columns = [\n        {\n            title: '名称', dataIndex: 'text', key: 'text', width: 300,\n            render: (value, record) => {\n                const {icon} = record;\n\n                if (icon) return <span><Icon type={icon}/> {value}</span>;\n\n                return value;\n            },\n        },\n        {title: 'path', dataIndex: 'path', key: 'path', width: 250},\n        {title: 'url', dataIndex: 'url', key: 'url'},\n        {title: 'target', dataIndex: 'target', key: 'target', width: 60},\n        {\n            title: '类型', dataIndex: 'type', key: 'type', width: 60,\n            render: value => {\n                if (value === '1') return '菜单';\n                if (value === '2') return '功能';\n\n                return '菜单';\n            },\n        },\n        {title: '功能编码', dataIndex: 'code', key: 'code', width: 100},\n        {title: '排序', dataIndex: 'order', key: 'order', width: 60},\n        {\n            title: '操作', dataIndex: 'operator', key: 'operator', width: 150,\n            render: (value, record) => {\n                // 要有type\n                const {type = '1'} = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        icon: 'form',\n                        onClick: () => this.setState({data: {...record, type}, visible: true}),\n                    },\n                    {\n                        label: '删除',\n                        icon: 'delete',\n                        color: 'red',\n                        confirm: {\n                            title: '您请确定要删除此节点及其子节点吗？',\n                            onConfirm: () => this.handleDeleteNode(record),\n                        },\n                    },\n                    {\n                        label: '添加子菜单',\n                        icon: 'folder-add',\n                        onClick: () => this.setState({data: {parentKey: record.key, type: '1'}, visible: true}),\n                    },\n                    {\n                        label: '添加子功能',\n                        icon: 'file-add',\n                        onClick: () => this.setState({data: {parentKey: record.key, type: '2'}, visible: true}),\n                    },\n                ];\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch() {\n        localMenus().then(menus => {\n            // 菜单根据order 排序\n            const orderedData = [...menus].sort((a, b) => {\n                const aOrder = a.order || 0;\n                const bOrder = b.order || 0;\n\n                // 如果order都不存在，根据 text 排序\n                if (!aOrder && !bOrder) {\n                    return a.text > b.text ? 1 : -1;\n                }\n\n                return bOrder - aOrder;\n            });\n\n            const menuTreeData = convertToTree(orderedData);\n\n            this.setState({menus: menuTreeData});\n        });\n        /*\n        // TODO 获取所有的菜单，不区分用户\n        this.setState({loading: true});\n        this.props.ajax\n            .get('/menus')\n            .then(res => {\n                this.setState({menus: res});\n            })\n            .finally(() => this.setState({loading: false}));\n        */\n    }\n\n    handleAddTopMenu = () => {\n        this.setState({data: {type: '1'}, visible: true});\n    };\n\n    handleDeleteNode = (record) => {\n        const {key} = record;\n\n        // TODO\n        this.setState({loading: true});\n        this.props.ajax\n            .del(`/menus/${key}`)\n            .then(() => {\n                this.setState({visible: false});\n                this.handleSearch();\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    render() {\n        const {\n            menus,\n            visible,\n            loading,\n            data,\n        } = this.state;\n\n        return (\n            <PageContent styleName=\"root\">\n                <ToolBar>\n                    <Button type=\"primary\" onClick={this.handleAddTopMenu}>添加顶级</Button>\n                </ToolBar>\n\n                <Table\n                    loading={loading}\n                    columns={this.columns}\n                    dataSource={menus}\n                    pagination={false}\n                />\n                <EditModal\n                    visible={visible}\n                    data={data}\n                    onOk={() => this.setState({visible: false}, this.handleSearch)}\n                    onCancel={() => this.setState({visible: false})}\n                />\n            </PageContent>\n        );\n    }\n}\n\n"],"sourceRoot":""}