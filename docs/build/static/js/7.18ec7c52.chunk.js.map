{"version":3,"sources":["pages/chart/EditModal.jsx","pages/chart/index.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../delegated 653 from dll-reference reactVendor_45666092243205e01b0c","components/batch-delete-confirm/index.jsx"],"names":["config","modal","props","isEdit","useState","data","setData","id","onOk","useForm","form","useGet","loading","fetchChart","usePost","successTip","saving","saveChart","usePut","updating","updateChart","a","res","Object","entries","forEach","key","undefined","setFieldsValue","values","useEffect","fetchData","formProps","labelWidth","modalLoading","okText","cancelText","submit","onCancel","resetFields","name","onFinish","initialValues","type","label","maxLength","required","path","condition","pageSize","pageNum","setCondition","dataSource","setDataSource","selectedRowKeys","setSelectedRowKeys","total","setTotal","visible","setVisible","setId","fetchCharts","useDel","errorTip","deleting","deleteCharts","deletingOne","deleteChart","columns","title","dataIndex","width","render","value","record","items","onClick","color","confirm","onConfirm","handleDelete","handleSearch","params","list","batchDeleteConfirm","length","ids","pageLoading","disabledDelete","layout","htmlType","danger","disabled","serialNumber","rowSelection","onChange","rowKey","onPageNumChange","onPageSizeChange","EditModal","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","__webpack_require__","count","content","style","padding","fontSize","icon","okType"],"mappings":"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","file":"static/js/7.18ec7c52.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\nimport {useGet, usePost, usePut} from 'src/commons/ajax';\n\nexport default config({\n    modal: props => props.isEdit ? '修改' : '添加',\n})(props => {\n    const [data, setData] = useState({});\n    const {isEdit, id, onOk} = props;\n    const [form] = Form.useForm();\n    const [loading, fetchChart] = useGet('/charts/{id}');\n    const [saving, saveChart] = usePost('/charts', {successTip: '添加成功！'});\n    const [updating, updateChart] = usePut('/charts', {successTip: '修改成功！'});\n\n    async function fetchData() {\n        if (loading) return;\n\n        const res = await fetchChart(id);\n\n        // 不处理null，下拉框不显示placeholder\n        Object.entries(res).forEach(([key, value]) => {\n            if (value === null) res[key] = undefined;\n        });\n\n        setData(res || {});\n        form.setFieldsValue(res || {});\n    }\n\n    async function handleSubmit(values) {\n        if (saving || updating) return;\n\n        await (isEdit ? updateChart : saveChart)(values);\n\n        onOk && onOk();\n    }\n\n    useEffect(() => {\n        if (isEdit) fetchData();\n    }, []);\n\n    const formProps = {\n        labelWidth: 100,\n    };\n    const modalLoading = loading || saving || updating;\n    return (\n        <ModalContent\n            loading={modalLoading}\n            okText=\"保存\"\n            cancelText=\"重置\"\n            onOk={() => form.submit()}\n            onCancel={() => form.resetFields()}\n        >\n            <Form\n                name=\"chart-modal-edit\"\n                form={form}\n                onFinish={handleSubmit}\n                initialValues={data}\n            >\n                {isEdit ? <FormElement {...formProps} type=\"hidden\" name=\"id\"/> : null}\n                <FormElement\n                    {...formProps}\n                    label=\"图标标题\"\n                    name=\"title\"\n                    maxLength={50}\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"type\"\n                    name=\"type\"\n                    maxLength={20}\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"textarea\"\n                    label=\"描述\"\n                    name=\"description\"\n                    maxLength={255}\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"消息标识\"\n                    name=\"messageToken\"\n                    required\n                    maxLength={50}\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"纵轴显示标签个数\"\n                    name=\"valueTickCount\"\n                />\n                <FormElement\n                    {...formProps}\n                    label=\"横轴系显示标签个数\"\n                    name=\"labelTickCount\"\n                />\n            </Form>\n        </ModalContent>\n    );\n});\n","import React, {useEffect, useState} from 'react';\nimport {Button, Form, } from 'antd';\n\nimport PageContent from 'src/layouts/page-content';\nimport config from 'src/commons/config-hoc';\nimport {useGet, useDel} from 'src/commons/ajax';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    Operator,\n    Pagination,\n} from 'src/library/components';\nimport batchDeleteConfirm from 'src/components/batch-delete-confirm';\n\nimport EditModal from './EditModal';\n\nexport default config({\n    path: '/charts',\n})(() => {\n    const [{condition, pageSize, pageNum}, setCondition] = useState({condition: {}, pageSize: 20, pageNum: 1});\n    const [dataSource, setDataSource] = useState([]);\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [visible, setVisible] = useState(false);\n    const [id, setId] = useState(null);\n    const [form] = Form.useForm();\n\n    const [loading, fetchCharts] = useGet('/charts');\n    const [deleting, deleteCharts] = useDel('/charts', {successTip: '删除成功！', errorTip: '删除失败！'});\n    const [deletingOne, deleteChart] = useDel('/charts/{id}', {successTip: '删除成功！', errorTip: '删除失败！'});\n\n    const columns = [\n        {title: '图标标题', dataIndex: 'title', width: 200},\n        {title: 'type', dataIndex: 'type', width: 200},\n        {title: '描述', dataIndex: 'description', width: 200},\n        {title: '消息标识', dataIndex: 'messageToken', width: 200},\n        {title: '纵轴显示标签个数', dataIndex: 'valueTickCount', width: 200},\n        {title: '横轴系显示标签个数', dataIndex: 'labelTickCount', width: 200},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '修改',\n                        onClick: () => setVisible(true) || setId(id),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                    \n                ];\n\n                return <Operator items={items}/>\n            },\n        },\n    ];\n\n    async function handleSearch() {\n        if (loading) return;\n        const params = {\n            ...condition,\n            pageNum,\n            pageSize,\n        };\n\n        const res = await fetchCharts(params);\n\n        setDataSource(res?.list || []);\n        setTotal(res?.total || 0);\n    }\n\n    async function handleDelete(id) {\n        if (deletingOne) return;\n\n        await deleteChart(id);\n        await handleSearch();\n    }\n\n    async function handleBatchDelete() {\n        if (deleting) return;\n\n        await batchDeleteConfirm(selectedRowKeys.length);\n\n        await deleteCharts({ids: selectedRowKeys});\n        setSelectedRowKeys([]);\n        await handleSearch();\n    }\n\n    useEffect(() => {\n        handleSearch();\n    }, [\n        condition,\n        pageNum,\n        pageSize,\n    ]);\n\n    const formProps = {width: 200};\n    const pageLoading = loading || deleting || deletingOne;\n    const disabledDelete = !selectedRowKeys?.length || pageLoading;\n\n    return (\n        <PageContent loading={pageLoading}>\n            <QueryBar>\n                <Form\n                    name=\"chart-query\"\n                    form={form}\n                    onFinish={condition => setCondition({condition, pageSize, pageNum: 1})}\n                >\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"图标标题\"\n                            name=\"title\"\n                        />\n                            <FormElement\n                            {...formProps}\n                            label=\"type\"\n                            name=\"type\"\n                        />\n                        <FormElement layout>\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                            <Button onClick={() => form.resetFields()}>重置</Button>\n                            <Button type=\"primary\" onClick={() => setVisible(true) || setId(null)}>添加</Button>\n                            <Button danger disabled={disabledDelete} onClick={handleBatchDelete}>删除</Button>\n                        </FormElement>\n                    </FormRow>\n                </Form>\n            </QueryBar>\n            <Table\n                serialNumber\n                rowSelection={{\n                    selectedRowKeys,\n                    onChange: setSelectedRowKeys,\n                }}\n                columns={columns}\n                dataSource={dataSource}\n                rowKey=\"id\"\n                pageNum={pageNum}\n                pageSize={pageSize}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={pageNum => setCondition({condition, pageSize, pageNum})}\n                onPageSizeChange={pageSize => setCondition({condition, pageSize, pageNum: 1})}\n            />\n            <EditModal\n                visible={visible}\n                id={id}\n                isEdit={id !== null}\n                onOk={() => setVisible(false) || handleSearch()}\n                onCancel={() => setVisible(false)}\n            />\n        </PageContent>\n    );\n});\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = (__webpack_require__(6))(653);","import React from 'react';\nimport {Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\n\nexport default function batchDeleteConfirm(count) {\n    const content = (\n        <div>\n            您确定删除\n            <span style={{padding: '0 5px', color: 'red', fontSize: 18}}>\n                {count}\n            </span>\n            条记录吗？\n        </div>\n    );\n    return new Promise((resolve, reject) => {\n        Modal.confirm({\n            title: '温馨提示',\n            content,\n            icon: <ExclamationCircleOutlined/>,\n            okType: 'danger',\n            onOk: () => resolve(true),\n            onCancel: () => reject('user cancel confirm'),\n        });\n    });\n}\n"],"sourceRoot":""}