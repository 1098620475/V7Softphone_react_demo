{"version":3,"sources":["pages/gen/Fast.jsx","pages/gen/SourceCode.jsx","pages/gen/PreviewModal.jsx","pages/gen/Single.jsx","pages/gen/index.jsx","../delegated 653 from dll-reference reactVendor_45666092243205e01b0c","../delegated 372 from dll-reference reactVendor_45666092243205e01b0c"],"names":["EditTable","tableEditable","Table","renderContent","value","record","obj","children","props","isTable","colSpan","Fast","config","ajax","state","loading","selectedRowKeys","dataSource","columns","title","dataIndex","width","style","paddingLeft","formProps","index","required","tabIndex","onBlur","e","chinese","target","render","field","tags","renderTags","setState","textAlign","align","renderFieldTags","handleSubmit","values","get","baseURL","then","res","getTables","finally","handleDbUrlChange","dbUrl","window","localStorage","setItem","DB_URL_STORE_KEY","handleGen","confirm","icon","content","onOk","params","tables","filter","item","includes","id","map","it","getLabel","name","type","length","isNullable","isForm","isColumn","isQuery","post","successTip","console","log","getItem","this","form","setFieldsValue","submit","padding","margin","ref","onFinish","label","placeholder","onChange","htmlType","onClick","rowSelection","renderCell","checked","originNode","rowKey","Component","SourceCode","containerHeight","setHeight","winHeight","document","documentElement","clientHeight","body","height","highlight","current","Prism","highlightElement","React","createRef","addEventListener","removeEventListener","code","plugins","language","node","container","borderRadius","className","join","TabPane","modal","previewCode","onCancel","surplusSpace","footer","bodyStyle","fileTypeName","tab","key","tableRowDraggable","UserCenter","total","pageNum","pageSize","deleting","table","ignoreFields","previewVisible","onFocus","handleFocus","onKeyDown","handleKeyDown","showSearch","options","formType","items","color","onConfirm","handleDelete","select","keyCode","ctrlKey","shiftKey","altKey","metaKey","nextTabIndex","isRight","isDown","isEnter","undefined","nextInput","querySelector","setTimeout","focus","handleAdd","ti","handleTypeChange","handleModuleNameChange","handleSwaggerChange","getFieldValue","tableName","handleTableNameChange","swaggerUrl","SWAGGER_URL_STORE_KEY","method","userName","password","moduleName","queries","forms","forEach","getFormElementType","oType","push","uuid","comment","isIgnore","find","listPage","query","selectable","pagination","serialNumber","add","operatorEdit","operatorDelete","batchDelete","modalEdit","pageEdit","append","newRecord","unshift","getParams","showTip","a","validateFields","error","Promise","reject","resolve","isInputLikeElement","handlePreview","handleSortEnd","newIndex","oldIndex","splice","initialValues","Item","marginBottom","shouldUpdate","prevValues","currValues","elementStyle","rules","message","display","justifyContent","paddingRight","paddingTop","onSortEnd","visible","path","defaultActiveKey","module","exports","__webpack_require__"],"mappings":"wVAeA,IAAMA,EAAYC,YAAcC,KAE1BC,EAAgB,SAACC,EAAOC,GAC1B,IAAMC,EAAM,CACRC,SAAUH,EACVI,MAAO,IAKX,OAHIH,EAAOI,UACPH,EAAIE,MAAME,QAAU,GAEjBJ,GAKUK,EADpBC,YAAO,CAACC,MAAM,G,+MAEXC,MAAQ,CACJC,SAAS,EACTC,gBAAiB,GACjBC,WAAY,I,EAGhBC,QAAU,CACN,CAACC,MAAO,eAAMC,UAAW,YAAaC,MAAO,KAC7C,CAACF,MAAO,iCAASC,UAAW,UAAWC,MAAO,KAC9C,CACIF,MAAO,0BAAMG,MAAO,CAACC,YAAa,KAA3B,sBAA4CH,UAAW,UAAWC,MAAO,IAChFG,UAAW,SAACnB,EAAQoB,GAChB,MAAO,CACHC,UAAU,EACVC,SAAUF,EAAQ,EAClBG,OAAQ,SAACC,GACLxB,EAAOyB,QAAUD,EAAEE,OAAO3B,SAItC4B,OAAQ7B,GAEZ,CACIgB,MAAO,0BAAMG,MAAO,CAACC,YAAa,KAA3B,gBAA2CH,UAAW,QAC7DI,UAAW,SAACnB,EAAQoB,GAChB,OAAIpB,EAAOI,QAAgB,KAEpB,CACHiB,UAAU,EACVC,SAAUF,EAAQ,IAClBG,OAAQ,SAACC,GACLxB,EAAO4B,MAAQJ,EAAEE,OAAO3B,SAIpC4B,OAAQ,SAAC5B,EAAOC,GACZ,GAAIA,EAAOI,QAAS,CAChB,IAAMyB,EAAOC,qBAAW9B,GAAQ,kBAAM,EAAK+B,SAAS,CAACnB,WAAW,YAAK,EAAKH,MAAMG,iBAChF,MAAO,CACHV,SAAU,yBAAKe,MAAO,CAACe,UAAW,UAAWH,GAC7C1B,MAAO,CACHE,QAAS,IAIrB,OAAON,IAGf,CACIe,MAAO,eAAMC,UAAW,UAAWC,MAAO,IAAKiB,MAAO,QACtDN,OAAQ,SAAC5B,EAAOC,GAEZ,MAAO,CACHE,SAFagC,0BAAgBlC,GAAQ,kBAAM,EAAK+B,SAAS,CAACnB,WAAW,YAAK,EAAKH,MAAMG,iBAGrFT,MAAO,CAACE,QAASL,EAAOI,QAAU,EAAI,O,EAgBtD+B,aAAe,SAACC,GACZ,EAAKL,SAAS,CAACrB,SAAS,IACxB,EAAKP,MAAMK,KAAK6B,IAAI,cAAeD,EAAQ,CAACE,QAAS,MAChDC,MAAK,SAAAC,GAAQ,IAAD,EAC6BC,oBAAUD,GAAzC5B,EADE,EACFA,WAAYD,EADV,EACUA,gBAEnB,EAAKoB,SAAS,CAACnB,aAAYD,uBAE9B+B,SAAQ,kBAAM,EAAKX,SAAS,CAACrB,SAAS,Q,EAG/CiC,kBAAoB,SAACnB,GACjB,IAAMoB,EAAQpB,EAAEE,OAAO3B,MAGvB8C,OAAOC,aAAaC,QAAQC,mBAAkBJ,GAAS,K,EAG3DK,UAAY,WACR,UAAMC,QAAQ,CACVC,KAAM,kBAAC,4BAAD,MACNrC,MAAO,uFACPsC,QAAS,kOACTC,KAAM,WAAO,IAAD,EAC8B,EAAK5C,MAApCE,EADC,EACDA,gBAqBD2C,EAAS,CACXC,OAvBI,EACgB3C,WACE4C,QAAO,SAAAC,GAAI,OAAI9C,EAAgB+C,SAASD,EAAKE,OACjDC,KAAI,SAAAH,GACtB,IAAMvD,EAAWuD,EAAKvD,SACjB0D,KAAI,SAAAC,GAAE,MAAK,CACRjC,MAAOiC,EAAGjC,MACVH,QAASqC,mBAASD,EAAGpC,SACrBsC,KAAMF,EAAGE,KACTC,KAAMH,EAAGG,KACTC,OAAQJ,EAAGI,OACXC,WAAYL,EAAGK,WACfC,OAAQN,EAAGM,OACXC,SAAUP,EAAGO,SACbC,QAASR,EAAGQ,YAGpB,OAAO,eACAZ,EADP,CAEIvD,iBAMR,EAAK6B,SAAS,CAACrB,SAAS,IACxB,EAAKP,MAAMK,KAAK8D,KAAK,cAAehB,EAAQ,CAAChB,QAAS,IAAKiC,WAAY,mCAClEhC,MAAK,SAAAC,GACFgC,QAAQC,IAAIjC,MAEfE,SAAQ,kBAAM,EAAKX,SAAS,CAACrB,SAAS,W,kEA7DnD,IAAMkC,EAAQC,OAAOC,aAAa4B,QAAQ1B,qBAAqB,GAC3DJ,IACA+B,KAAKC,KAAKC,eAAe,CAACjC,UAE1B+B,KAAKC,KAAKE,Y,+BA8DR,IAAD,SAC0CH,KAAKlE,MAA7CG,EADF,EACEA,WAAYD,EADd,EACcA,gBAAiBD,EAD/B,EAC+BA,QAKpC,OACI,kBAAC,IAAD,CAAaO,MAAO,CAAC8D,QAAS,EAAGC,OAAQ,GAAItE,QAASA,GAClD,6BACIuE,IAAK,SAAAL,GAAI,OAAI,EAAKA,KAAOA,GACzBM,SAAUP,KAAKxC,cAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,iBAVE,CACdnB,MAAO,OASK,CAEImE,MAAM,iCACNpB,KAAK,QACLqB,YAAY,+CACZ/D,UAAQ,EACRgE,SAAUV,KAAKhC,qBAEnB,6BAAQ1B,MAAO,CAAC+D,OAAQ,SAAUhB,KAAK,UAAUsB,SAAS,UAA1D,wCACA,6BAAQC,QAASZ,KAAK1B,WAAtB,oCAGR,kBAACtD,EAAD,CACI6F,aAAc,CACV7E,kBACA0E,SAAU,SAAA1E,GAAe,OAAI,EAAKoB,SAAS,CAACpB,qBAC5C8E,WAAY,SAACC,EAAS1F,EAAQoB,EAAOuE,GAAzB,OAAwC3F,EAAOI,QAAUuF,EAAa,OAEtF/E,WAAYA,EACZC,QAAS8D,KAAK9D,QACd+E,OAAO,Y,GAlKOC,e,2JC3BbC,E,kDACjB,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAIVM,MAAQ,CACJsF,gBAAiB,QANF,EAoBnBC,UAAY,WACR,IAAMC,EAAYC,SAASC,gBAAgBC,cAAgBF,SAASG,KAAKD,aACzE5B,QAAQC,IAAIwB,GACZ,IAAMK,EAASL,EAAY,IAE3B,EAAKlE,SAAS,CAACgE,gBAAiBO,KAzBjB,EAgCnBC,UAAY,WACR/B,QAAQC,IAAI,EAAKQ,KACb,EAAKA,KAAO,EAAKA,IAAIuB,SACrBC,IAAMC,iBAAiB,EAAKzB,IAAIuB,UAjCpC,EAAKvB,IAAM0B,IAAMC,YAFF,E,gEAUfjC,KAAK4B,YAEL5B,KAAKqB,YACLnD,OAAOgE,iBAAiB,SAAUlC,KAAKqB,a,2CAIvCrB,KAAK4B,c,6CAYL1D,OAAOiE,oBAAoB,SAAUnC,KAAKqB,a,+BAUpC,IAAD,SAC6CrB,KAAKxE,MAAhD4G,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,SADjB,IAC2BjG,aAD3B,MACmC,OADnC,EAEE+E,EAAmBpB,KAAKlE,MAAxBsF,gBACP,OACI,yBAAKd,IAAK,SAAAiC,GAAI,OAAI,EAAKC,UAAYD,IAC/B,yBACIjG,MAAO,CACHD,QACAgE,OAAQ,EACRsB,OAAQP,EACRqB,aAAc,GAElBC,UAAYL,EAAeA,EAAQM,KAAK,KAAlB,IAEtB,0BAAMrC,IAAKN,KAAKM,IAAKoC,UAAS,mBAAcJ,IACzCF,S,GAvDiBJ,IAAMd,WCGvC0B,E,UAAAA,QAQcnG,EANpBb,YAAO,CACJiH,MAAO,CACH1G,MAAO,2BACPE,MAAO,Q,+MAIXP,MAAQ,G,oGAME,IAAD,EAC2BkE,KAAKxE,MAA9BsH,EADF,EACEA,YAAaC,EADf,EACeA,SACpB,OACI,kBAAC,IAAD,CACIC,cAAY,EACZC,OAAQ,6BAAQrC,QAASmC,GAAjB,gBACRG,UAAW,CAAC9C,QAAS,eAErB,iCACK0C,EAAY7D,KAAI,SAAAH,GAAS,IACNqE,EAAuBrE,EAAhClD,OAASuH,aAAef,EAAQtD,EAARsD,KAC/B,OACI,kBAACQ,EAAD,CAASQ,IAAKD,EAAcE,IAAKF,GAC7B,kBAAC,EAAD,CACIb,SAAS,MACTD,QAAS,CAAC,gBACVD,KAAMA,c,GAvBPlB,e,ECcnC,I,EAAMlG,EAAYC,YAAcqI,YAAkBpI,MAK7BqI,EAHpB3H,YAAO,CACJC,MAAM,G,+MAGNC,MAAQ,CACJC,SAAS,EACTyH,MAAO,EACPC,QAAS,EACTC,SAAU,GACVC,UAAU,EACVC,MAAO,GACPhF,OAAQ,GACRiF,aAAc,GACdC,gBAAgB,EAChBhB,YAAa,I,EAGjB5G,QAAU,CACN,CAACC,MAAO,eAAMC,UAAW,UAAWC,MAAO,KAC3C,CACIF,MAAO,qBAAOC,UAAW,UAAWC,MAAO,IAC3CG,UAAW,SAACnB,EAAQoB,GAChB,IAAME,EAAWF,EAAQ,EACzB,MAAO,CACHC,UAAU,EACVC,WACAoH,QAAS,EAAKC,YACdpH,OAAQ,SAACC,GACLxB,EAAOyB,QAAUD,EAAEE,OAAO3B,OAE9B6I,UAAW,SAACpH,GAAD,OAAO,EAAKqH,cAAcrH,EAAGF,OAIpD,CACIR,MAAO,eAAMC,UAAW,QACxBI,UAAW,SAACnB,EAAQoB,GAChB,GAAIpB,EAAOI,QAAS,OAAO,KADD,IAEXF,EAAa,EAAKO,MAA1B8H,MAAQrI,SAGToB,EAAWF,IAFM,OAARlB,QAAQ,IAARA,OAAA,EAAAA,EAAU+D,SAAU,GAED,EAClC,MAAO,CACH5C,UAAU,EACVC,WACAoH,QAAS,EAAKC,YACdpH,OAAQ,SAACC,GACLxB,EAAO4B,MAAQJ,EAAEE,OAAO3B,OAE5B6I,UAAW,SAACpH,GAAD,OAAO,EAAKqH,cAAcrH,EAAGF,OAIpD,CACIR,MAAO,2BAAQC,UAAW,WAC1BI,UAAW,SAACnB,GACR,OAAIA,EAAOI,QAAgB,KAEpB,CACH4D,KAAM,SACN8E,YAAY,EACZC,QAAS,CACL,CAAChJ,MAAO,QAASoF,MAAO,sBACxB,CAACpF,MAAO,SAAUoF,MAAO,sBACzB,CAACpF,MAAO,SAAUoF,MAAO,sBACzB,CAACpF,MAAO,WAAYoF,MAAO,sBAC3B,CAACpF,MAAO,WAAYoF,MAAO,sBAC3B,CAACpF,MAAO,SAAUoF,MAAO,kCACzB,CAACpF,MAAO,QAASoF,MAAO,kCACxB,CAACpF,MAAO,SAAUoF,MAAO,sBACzB,CAACpF,MAAO,cAAeoF,MAAO,sBAC9B,CAACpF,MAAO,WAAYoF,MAAO,sBAC3B,CAACpF,MAAO,iBAAkBoF,MAAO,4BACjC,CAACpF,MAAO,QAASoF,MAAO,sBACxB,CAACpF,MAAO,cAAeoF,MAAO,4BAC9B,CAACpF,MAAO,eAAgBoF,MAAO,kCAC/B,CAACpF,MAAO,SAAUoF,MAAO,4BACzB,CAACpF,MAAO,OAAQoF,MAAO,kCACvB,CAACpF,MAAO,OAAQoF,MAAO,kCACvB,CAACpF,MAAO,OAAQoF,MAAO,kCACvB,CAACpF,MAAO,YAAaoF,MAAO,+CAC5B,CAACpF,MAAO,aAAcoF,MAAO,8CAC7B,CAACpF,MAAO,WAAYoF,MAAO,kCAC3B,CAACpF,MAAO,WAAYoF,MAAO,uBAE/BE,SAAU,SAAC2D,GACPhJ,EAAOgJ,SAAWA,MAKlC,CACIlI,MAAO,eAAMC,UAAW,WAAYC,MAAO,IAC3CW,OAAQ,SAAC5B,EAAOC,GACZ,OAAOkC,0BAAgBlC,GAAQ,kBAAM,EAAK+B,SAAS,CAACwG,MAAM,eAAK,EAAK9H,MAAM8H,cAGlF,CACIzH,MAAO,eAAMC,UAAW,WAAYC,MAAO,GAC3CW,OAAQ,SAAC5B,EAAOC,GAAY,IACjB2D,EAAY3D,EAAZ2D,GAAII,EAAQ/D,EAAR+D,KACLkF,EAAQ,CACV,CACI9D,MAAO,eACP+D,MAAO,MACPhG,QAAS,CACLpC,MAAM,kCAAD,OAAWiD,EAAX,MACLoF,UAAW,kBAAM,EAAKC,aAAazF,OAK/C,OAAO,kBAAC,IAAD,CAAUsF,MAAOA,O,EAiBpCN,YAAc,SAACnH,GACXA,EAAEE,OAAO2H,U,EAGbR,cAAgB,SAACrH,EAAGF,GAAc,IACvBgI,EAA+C9H,EAA/C8H,QAASC,EAAsC/H,EAAtC+H,QAASC,EAA6BhI,EAA7BgI,SAAUC,EAAmBjI,EAAnBiI,OAAQC,EAAWlI,EAAXkI,QAE3C,KAAIH,GAAWC,GAAYC,GAAUC,GAArC,CAH6B,IAczBC,EATWzJ,EAAa,EAAKO,MAA1B8H,MAAQrI,SACT+D,GAAiB,OAAR/D,QAAQ,IAARA,OAAA,EAAAA,EAAU+D,SAAU,EAG7B2F,EAAsB,KAAZN,EACVO,EAAqB,KAAZP,EAETQ,EAAsB,KAAZR,GAIZO,GAAUC,KAENH,EADArI,IAAa2C,GAAU3C,IAAsB,EAAT2C,OACrB8F,EAEAzI,EAAW,GAZT,KAAZgI,IAgBHK,EAAerI,EAAW,GAbT,KAAZgI,IAiBPK,EADArI,GAAY2C,EACG3C,EAAW,GAAK,OAAIyI,EAAYzI,EAAW,EAAI2C,EAE/C3C,EAAW2C,GAI9B2F,IAEID,EADArI,GAAY2C,EACG3C,EAAW2C,EAEX3C,EAAW2C,IAAWA,OAAS8F,EAAYzI,EAAW2C,EAAS,GAItF,IAAM+F,EAAY9D,SAAS+D,cAAT,0BAA0CN,EAA1C,OAEdK,EAEAE,YAAW,WACPF,EAAUG,QACVH,EAAUX,aAEPS,GAAWD,GAAUD,KAE5B,EAAKQ,WAAU,GAGfF,YAAW,WACP,IAAIG,EAAK/I,EAELsI,IAASS,EAAK/I,EAAW2C,IAExB4F,GAAUC,IAAYxI,IAAsB,EAAT2C,IAAYoG,EAAK/I,EAAW,GAEpE,EAAKuH,cAAc,CAACS,QAAS,IAAKe,S,EAK9CC,iBAAmB,SAAC9I,GAChB,IAAMwC,EAAOxC,EAAEE,OAAO3B,MACT,UAATiE,GACA,EAAKrB,oBAEI,aAATqB,GACA,EAAKuG,yBAEI,YAATvG,GACA,EAAKwG,uB,EAIb7H,kBAAoB,SAACnB,GACjB,IAAMoB,EAAQ,EAAKgC,KAAK6F,cAAc,SACtC5H,OAAOC,aAAaC,QAAQC,mBAAkBJ,GAAS,IAGvD,EAAKb,SAAS,CAACwB,OAAQ,GAAIgF,MAAO,KAClC,EAAK3D,KAAKC,eAAe,CAAC6F,eAAWX,IAEhCnH,IAEL,EAAKb,SAAS,CAACrB,SAAS,IACxB,EAAKP,MAAMK,KAAK6B,IAAI,cAAe,CAACO,SAAQ,CAACN,QAAS,MACjDC,MAAK,SAAAC,GAAQ,IACH5B,EAAc6B,oBAAUD,GAAxB5B,WACP,EAAKmB,SAAS,CAACwB,OAAQ3C,IAAa,WAAO,IAAD,EAGhC8J,EAAS,UAAG9J,EAAW,UAAd,aAAG,EAAe8J,UAEjC,EAAK9F,KAAKC,eAAe,CAAC6F,cAC1B,EAAKC,sBAAsBD,SAGlChI,SAAQ,kBAAM,EAAKX,SAAS,CAACrB,SAAS,S,EAG/C8J,oBAAsB,WAClB,IAAMI,EAAa,EAAKhG,KAAK6F,cAAc,cAO3C,GANA5H,OAAOC,aAAaC,QAAQ8H,wBAAuBD,GAGnD,EAAK7I,SAAS,CAACwB,OAAQ,GAAIgF,MAAO,KAClC,EAAK3D,KAAKC,eAAe,CAAC6F,eAAWX,IAEhCa,EAAL,CAGA,IAGMtH,EAAS,CACXsH,aACAE,OALW,EAAKlG,KAAK6F,cAAc,UAMnCM,SALa,EAAKnG,KAAK6F,cAAc,YAMrCO,SALa,EAAKpG,KAAK6F,cAAc,aAQzC,EAAK1I,SAAS,CAACrB,SAAS,IACxB,EAAKP,MAAMK,KAAK6B,IAAI,eAAgBiB,EAAQ,CAAChB,QAAS,MACjDC,MAAK,SAAAC,GAAQ,IACSkI,EAAsClI,EAAlDyI,WAAuBC,EAA2B1I,EAA3B0I,QAASrK,EAAkB2B,EAAlB3B,QAASsK,EAAS3I,EAAT2I,MAE1CjL,EAAW,IAChBgL,GAAW,IAAIE,SAAQ,SAAA3H,GAAS,IACtBO,EAAgCP,EAAhCO,KAAMpC,EAA0B6B,EAA1B7B,MAAOuD,EAAmB1B,EAAnB0B,MAAO9D,EAAYoC,EAAZpC,SACrBI,EAAUqC,mBAASqB,GACnB6D,EAAWqC,6BAAmB,CAACC,MAAOtH,EAAMmB,MAAO1D,IAEzDvB,EAASqL,KAAK,CACV5H,GAAI6H,eACJd,YACA9I,QACA6J,QAAStG,EACT1D,UACAsC,KAAMnC,EAENoC,OACAgF,WACA/E,OAAQ,EACRC,YAAa7C,EAEb+C,UAAU,EACVC,SAAS,EACTF,QAAQ,EACRuH,UAAU,QAIjB7K,GAAW,IAAIuK,SAAQ,SAAA3H,GAAS,IACtB3C,EAAoB2C,EAApB3C,MAAOC,EAAa0C,EAAb1C,UACd,IAAKb,EAASyL,MAAK,SAAA9H,GAAE,OAAIA,EAAGjC,QAAUb,KAAY,CAC9C,IAAMiI,EAAWqC,6BAAmB,CAACC,MAAO,QAASnG,MAAOrE,IAC5DZ,EAASqL,KACL,CACI5H,GAAI6H,eACJd,YACA9I,MAAOb,EACP0K,QAAS3K,EACTW,QAASqC,mBAAShD,GAClBiD,KAAMhD,EAENiD,KAAM,SACNgF,WACA/E,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACRuH,UAAU,SAMzBP,GAAS,IAAIC,SAAQ,SAAA3H,GAAS,IACpBO,EAAsBP,EAAtBO,KAAMpC,EAAgB6B,EAAhB7B,MAAOuD,EAAS1B,EAAT0B,MACpB,IAAKjF,EAASyL,MAAK,SAAA9H,GAAE,OAAIA,EAAGjC,QAAUA,KAAQ,CAC1C,IAAMoH,EAAWqC,6BAAmB,CAACC,MAAOtH,EAAMmB,MAAOA,IAEzDjF,EAASqL,KAAK,CACV5H,GAAI6H,eACJd,YACA9I,QACA6J,QAAStG,EACT1D,QAASqC,mBAASqB,GAClBpB,KAAMnC,EAENoC,OACAgF,WACA/E,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACRuH,UAAU,QAKtB,IAAMnD,EAAQ,CACV5E,GAAI+G,EACJtK,SAAS,EACTsK,YACAe,QAAS,GACTG,UAAU,EACVC,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EAEbC,WAAW,EACXC,UAAU,EACVpM,YAGJ,EAAK6B,SAAS,CAACwG,aAElB7F,SAAQ,kBAAM,EAAKX,SAAS,CAACrB,SAAS,S,EAG/C6J,uBAAyB,WAErB,EAAKxI,SAAS,CAACwB,OAAQ,GAAIgF,MAAO,KAElC,IAAM0C,EAAa,EAAKrG,KAAK6F,cAAc,cAC3C,GAAKQ,EAAL,CAEA,IAAMP,EAAYO,EAElB,EAAKlJ,SAAS,CACVwG,MAAO,CACH5E,GAAI+G,EACJtK,SAAS,EACTsK,YACAe,QAAS,GACTG,UAAU,EACVC,OAAO,EACPC,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EAEbC,WAAW,EACXC,UAAU,EACVpM,SAAU,CACN,CACIyD,GAAI6H,eACJd,YACA9I,MAvBF,OAwBE6J,QAAS,qBACThK,QAAS,qBACTsC,KA1BF,OA4BEC,KAAM,SACNgF,SAAU,QACV/E,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACRuH,UAAU,S,EAQ9BtC,aAAe,SAACzF,GAAQ,IACb4E,EAAS,EAAK9H,MAAd8H,MACArI,EAAYqI,EAAZrI,SACPqI,EAAMrI,SAAWA,EAASsD,QAAO,SAAAC,GAAI,OAAIA,EAAKE,KAAOA,KACrD,EAAK5B,SAAS,CAACwG,MAAM,eAAKA,M,EAG9BoC,sBAAwB,SAACD,GAAe,IAE9BnC,EADW,EAAK9H,MAAf8C,OACcoI,MAAK,SAAAlI,GAAI,OAAIA,EAAKiH,YAAcA,KACrD,EAAK3I,SAAS,CAACwG,W,EAGnB6B,UAAY,SAACmC,GAAY,IACdhE,EAAS,EAAK9H,MAAd8H,MACFA,EAAMrI,WAAUqI,EAAMrI,SAAW,IACtC,IAAM+D,EAASsE,EAAMrI,SAAS+D,OACvByG,EAAuBnC,EAAvBmC,UAAWxK,EAAYqI,EAAZrI,SACZ0B,EAAK,eAAWqC,EAAS,GAGzBuI,EAAY,CACd7I,GAHO6H,eAIPd,YACA9I,QACA6J,QAAS,qBACThK,QAAS,qBACTsC,KAAMnC,EAENoC,KAAM,SACNgF,SAAU,QACV/E,OAAQ,EACRC,YAAY,EAEZE,UAAU,EACVC,SAAS,EACTF,QAAQ,EACRuH,UAAU,GAGda,EAASrM,EAASqL,KAAKiB,GAAatM,EAASuM,QAAQD,GACrDjE,EAAMrI,SAAN,YAAqBA,GACrB,EAAK6B,SAAS,CAACwG,MAAM,eAAKA,M,EAI9BmE,U,uCAAY,WAAOC,GAAP,iBAAAC,EAAA,sEACF,EAAKhI,KAAKiI,iBADR,oBAGH,EAAKpM,MAAM8H,aAHR,iBAGH,EAAkBrI,gBAHf,aAGH,EAA4B+D,OAHzB,uBAIJ,UAAM6I,MAAM,CACR3J,KAAM,kBAAC,4BAAD,MACNrC,MAAO,2BACPsC,QAAS,6HAPT,kBAUG2J,QAAQC,UAVX,gCAaD,IAAID,SAAQ,SAACE,EAASD,GACzB,IAAMN,EAAY,WAAO,IACdnE,EAAS,EAAK9H,MAAd8H,MACDrI,EAAWqI,EAAMrI,SAClB0D,KAAI,SAAAC,GAAE,MAAK,CACRjC,MAAOiC,EAAGjC,MACVH,QAASqC,mBAASD,EAAGpC,SACrBsC,KAAMF,EAAGE,KACTC,KAAMH,EAAGG,KACTgF,SAAUnF,EAAGmF,UAAY,QACzB/E,OAAQiJ,YAAmBrJ,EAAGmF,UAAY,SAAWnF,EAAGI,OAAS,EACjEC,WAAYL,EAAGK,WACfC,OAAQN,EAAGM,OACXC,SAAUP,EAAGO,SACbC,QAASR,EAAGQ,YAGdf,EAAS,CACXC,OAAQ,CAAC,eACFgF,EADC,CAEJrI,eAIR+M,EAAQ3J,IAGPqJ,EAKL,UAAMzJ,QAAQ,CACVC,KAAM,kBAAC,4BAAD,MACNrC,MAAO,uFACPsC,QAAS,kOACTC,KAAM,WACFqJ,KAEJhF,SAAU,WACNsF,OAZJN,QAzCA,2C,wDA2DZzJ,U,sBAAY,4BAAA2J,EAAA,sEACa,EAAKF,WAAU,GAD5B,OACFpJ,EADE,OAGR,EAAKvB,SAAS,CAACrB,SAAS,IACxB,EAAKP,MAAMK,KAAK8D,KAAK,cAAehB,EAAQ,CAAChB,QAAS,IAAKiC,WAAY,mCAClE7B,SAAQ,kBAAM,EAAKX,SAAS,CAACrB,SAAS,OALnC,2C,EAQZyM,c,sBAAgB,4BAAAP,EAAA,sEACS,EAAKF,YADd,OACNpJ,EADM,OAGZ,EAAKvB,SAAS,CAACrB,SAAS,IACxB,EAAKP,MAAMK,KAAK8D,KAAK,eAAgBhB,EAAQ,CAAChB,QAAS,MAClDC,MAAK,SAAAC,GACF,EAAKT,SAAS,CAAC0G,gBAAgB,EAAMhB,YAAajF,OAErDE,SAAQ,kBAAM,EAAKX,SAAS,CAACrB,SAAS,OAR/B,2C,EAWhB0M,cAAgB,YAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACjB/E,EAAS,EAAK9H,MAAd8H,MAD+B,EAEdA,EAAjBrI,gBAF+B,MAEpB,GAFoB,EAItCA,EAASqN,OAAT,MAAArN,EAAQ,CAAQmN,EAAU,GAAlB,mBAAwBnN,EAASqN,OAAOD,EAAU,MAC1D/E,EAAMrI,SAAN,YAAqBA,GAErB,EAAK6B,SAAS,CAACwG,MAAM,eAAKA,M,kEAlb1B,IAAM3F,EAAQC,OAAOC,aAAa4B,QAAQ1B,qBAAqB,GACzD4H,EAAa/H,OAAOC,aAAa4B,QAAQmG,0BAA0B,GACzElG,KAAKC,KAAKC,eAAe,CAAC+F,eAEtBhI,IACA+B,KAAKC,KAAKC,eAAe,CAACjC,UAE1B+B,KAAKhC,uB,+BA8aH,IAAD,SAQDgC,KAAKlE,MANLC,EAFC,EAEDA,QACA4H,EAHC,EAGDA,SACA/E,EAJC,EAIDA,OACAgF,EALC,EAKDA,MACAE,EANC,EAMDA,eACAhB,EAPC,EAODA,YAGEtG,EAAY,CACdF,MAAO,CAACC,YAAa,KAGzB,OACI,kBAAC,IAAD,CAAaR,QAASA,GAAW4H,EAAUrH,MAAO,CAAC8D,QAAS,EAAGC,OAAQ,IACnE,kBAAC,IAAD,KACI,6BAAMC,IAAK,SAAAL,GAAI,OAAI,EAAKA,KAAOA,GAAM4I,cAAe,CAACxJ,KAAM,QAAS8G,OAAQ,MAAOC,SAAU,QAASC,SAAU,WAC5G,kBAAC,IAAD,KACI,kBAAC,IAAD,iBACQ7J,EADR,CAEIH,MAAO,IACPgD,KAAK,eACLD,KAAK,OACLgF,QAAS,CACL,CAAChJ,MAAO,UAAWoF,MAAO,WAC1B,CAACpF,MAAO,QAASoF,MAAO,SACxB,CAACpF,MAAO,WAAYoF,MAAO,uBAE/BE,SAAUV,KAAK2F,oBAEnB,4BAAMmD,KAAN,CAAWxM,MAAO,CAACyM,aAAc,GAAIC,aAAc,SAACC,EAAYC,GAAb,OAA4BD,EAAW5J,OAAS6J,EAAW7J,QACzG,YAAsB,IACbA,GAAOyG,EADK,EAAnBA,eAC4B,QAC3B,MAAa,UAATzG,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,iBACQ7C,EADR,CAEIH,MAAO,IACPmE,MAAM,iCACNpB,KAAK,QACLqB,YAAY,+CACZC,SAAU,EAAK1C,qBAEnB,kBAAC,IAAD,iBACQxB,EADR,CAEI2M,aAAc,CAAC9M,MAAO,KACtBgD,KAAK,SACL8E,YAAU,EACV3D,MAAM,2BACNpB,KAAK,YACLsB,SAAU,EAAKsF,sBACf5B,QAASxF,EAAOK,KAAI,SAAAH,GAAI,MAAK,CAAC1D,MAAO0D,EAAKiH,UAAWvF,MAAM,GAAD,OAAK1B,EAAKiH,UAAV,YAAuBjH,EAAKgI,iBAKzF,YAATzH,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,iBACQ7C,EADR,CAEIH,MAAO,IACPmE,MAAM,2BACNpB,KAAK,aACLqB,YAAY,2BACZC,SAAU,EAAKmF,uBAEnB,kBAAC,IAAD,iBACQrJ,EADR,CAEI6C,KAAK,SACLhD,MAAO,IACPoE,YAAY,2BACZrB,KAAK,SACLgF,QAAS,CACL,CAAChJ,MAAO,MAAOoF,MAAO,OACtB,CAACpF,MAAO,OAAQoF,MAAO,QACvB,CAACpF,MAAO,MAAOoF,MAAO,QAE1BE,SAAU,EAAKmF,uBAEnB,kBAAC,IAAD,iBACQrJ,EADR,CAEIH,MAAO,IACPoE,YAAY,sBACZrB,KAAK,cAET,kBAAC,IAAD,iBACQ5C,EADR,CAEIH,MAAO,IACPoE,YAAY,sBACZrB,KAAK,eAMR,aAATC,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,iBACQ7C,EADR,CAEIH,MAAO,IACPmE,MAAM,qBACNpB,KAAK,aACLqB,YAAY,gCACZ2I,MAAO,CAAC,CAAC1M,UAAU,EAAM2M,QAAS,+CAClC3I,SAAU,EAAKkF,gCAV/B,QAoBpB,yBAAKtJ,MAAO,CAACyM,aAAc,EAAGO,QAAS,OAAQC,eAAgB,kBAC3D,6BACI,6BAAQlK,KAAK,UAAUuB,QAAS,kBAAM,EAAK6E,cAA3C,gBACA,6BAAQnJ,MAAO,CAAC+D,OAAQ,SAAUhB,KAAK,UAAUuB,QAASZ,KAAK1B,WAA/D,4BACA,6BAAQsC,QAASZ,KAAKwI,eAAtB,6BAEJ,yBAAKlM,MAAO,CAACkN,aAAc,GAAIC,WAAY,IACtCtM,qBAAWyG,GAAO,kBAAM,EAAKxG,SAAS,CAACwG,MAAM,eAAKA,UAG3D,kBAAC,EAAD,CACI8F,UAAW1J,KAAKyI,cAChBpB,cAAY,EACZnL,QAAS8D,KAAK9D,QACdD,WAAU,OAAE2H,QAAF,IAAEA,OAAF,EAAEA,EAAOrI,SACnB0F,OAAO,OAEX,kBAAC,EAAD,CACI0I,QAAS7F,EACThB,YAAaA,EACbpE,KAAM,kBAAM,EAAKtB,SAAS,CAAC0G,gBAAgB,KAC3Cf,SAAU,kBAAM,EAAK3F,SAAS,CAAC0G,gBAAgB,Y,GAnrB3B5C,e,MCzBjC0B,E,UAAAA,QAMcnG,EAJpBb,YAAO,CACJO,MAAO,2BACPyN,KAAM,Q,0KAIF,OACI,kBAAC,IAAD,CAAa,UAAU,cACnB,6BAAMC,iBAAiB,UACnB,kBAAC,EAAD,CAASxG,IAAI,OAAOD,IAAI,4BACpB,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAASC,IAAI,SAASD,IAAI,4BACtB,kBAAC,EAAD,a,GATWlC,e,uBCdnC4I,EAAOC,QAAWC,EAAoB,EAArB,CAAyB,M,oBCA1CF,EAAOC,QAAWC,EAAoB,EAArB,CAAyB","file":"static/js/12.4b663524.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {FormElement, FormRow, Table, tableEditable} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport {\n    DB_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n} from './util';\nimport './style.less';\n\nconst EditTable = tableEditable(Table);\n\nconst renderContent = (value, record) => {\n    const obj = {\n        children: value,\n        props: {},\n    };\n    if (record.isTable) {\n        obj.props.colSpan = 0;\n    }\n    return obj;\n};\n\n\n@config({ajax: true})\nexport default class Fast extends Component {\n    state = {\n        loading: false,\n        selectedRowKeys: [],\n        dataSource: [],\n    };\n\n    columns = [\n        {title: '表名', dataIndex: 'tableName', width: 200},\n        {title: '数据库注释', dataIndex: 'comment', width: 200},\n        {\n            title: <span style={{paddingLeft: 10}}>中文名</span>, dataIndex: 'chinese', width: 250,\n            formProps: (record, index) => {\n                return {\n                    required: true,\n                    tabIndex: index + 1, // index * 2 + 1\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                };\n            },\n            render: renderContent,\n        },\n        {\n            title: <span style={{paddingLeft: 10}}>列名</span>, dataIndex: 'field',\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n\n                return {\n                    required: true,\n                    tabIndex: index + 100, // index * 2 + 2\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                };\n            },\n            render: (value, record) => {\n                if (record.isTable) {\n                    const tags = renderTags(record, () => this.setState({dataSource: [...this.state.dataSource]}));\n                    return {\n                        children: <div style={{textAlign: 'right'}}>{tags}</div>,\n                        props: {\n                            colSpan: 3,\n                        },\n                    };\n                }\n                return value;\n            },\n        },\n        {\n            title: '选项', dataIndex: 'options', width: 160, align: 'right',\n            render: (value, record) => {\n                const children = renderFieldTags(record, () => this.setState({dataSource: [...this.state.dataSource]}));\n                return {\n                    children,\n                    props: {colSpan: record.isTable ? 0 : 1},\n                };\n            },\n        },\n        // {title: '是否为空', dataIndex: 'nullable'},\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        if (dbUrl) {\n            this.form.setFieldsValue({dbUrl});\n            // 初始化查询\n            this.form.submit();\n        }\n    }\n\n    handleSubmit = (values) => {\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/tables', values, {baseURL: '/'})\n            .then(res => {\n                const {dataSource, selectedRowKeys} = getTables(res);\n\n                this.setState({dataSource, selectedRowKeys});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = e.target.value;\n\n        // 进行本地存储，记录数据库地址，使用原生存储，不区分用户\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n    };\n\n    handleGen = () => {\n        Modal.confirm({\n            icon: <ExclamationCircleOutlined/>,\n            title: '同名文件将被覆盖，是否继续？',\n            content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n            onOk: () => {\n                const {selectedRowKeys, dataSource} = this.state;\n                const tables = dataSource.filter(item => selectedRowKeys.includes(item.id));\n                const result = tables.map(item => {\n                    const children = item.children\n                        .map(it => ({\n                            field: it.field,\n                            chinese: getLabel(it.chinese),\n                            name: it.name,\n                            type: it.type,\n                            length: it.length,\n                            isNullable: it.isNullable,\n                            isForm: it.isForm,\n                            isColumn: it.isColumn,\n                            isQuery: it.isQuery,\n                        }));\n\n                    return {\n                        ...item,\n                        children,\n                    };\n                });\n                const params = {\n                    tables: result,\n                };\n                this.setState({loading: true});\n                this.props.ajax.post('/gen/tables', params, {baseURL: '/', successTip: '生成成功！'})\n                    .then(res => {\n                        console.log(res);\n                    })\n                    .finally(() => this.setState({loading: false}));\n            },\n        });\n    };\n\n    render() {\n        const {dataSource, selectedRowKeys, loading} = this.state;\n\n        const formProps = {\n            width: '50%',\n        };\n        return (\n            <PageContent style={{padding: 0, margin: 0}} loading={loading}>\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                >\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"数据库地址\"\n                            name=\"dbUrl\"\n                            placeholder=\"mysql://username:password@host:port/database\"\n                            required\n                            onChange={this.handleDbUrlChange}\n                        />\n                        <Button style={{margin: '0 8px'}} type=\"primary\" htmlType=\"submit\">获取数据库表</Button>\n                        <Button onClick={this.handleGen}>生成选中表</Button>\n                    </FormRow>\n                </Form>\n                <EditTable\n                    rowSelection={{\n                        selectedRowKeys,\n                        onChange: selectedRowKeys => this.setState({selectedRowKeys}),\n                        renderCell: (checked, record, index, originNode) => record.isTable ? originNode : null,\n                    }}\n                    dataSource={dataSource}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                />\n            </PageContent>\n        );\n    }\n}\n","import React from \"react\"\nimport Prism from \"prismjs\"\n\nexport default class SourceCode extends React.Component {\n    constructor(props) {\n        super(props)\n        this.ref = React.createRef()\n    }\n\n    state = {\n        containerHeight: 'auto',\n    };\n\n    componentDidMount() {\n        this.highlight()\n\n        this.setHeight();\n        window.addEventListener('resize', this.setHeight);\n    }\n\n    componentDidUpdate() {\n        this.highlight()\n    }\n\n    setHeight = () => {\n        const winHeight = document.documentElement.clientHeight || document.body.clientHeight;\n        console.log(winHeight);\n        const height = winHeight - 285;\n\n        this.setState({containerHeight: height});\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setHeight);\n    }\n\n    highlight = () => {\n        console.log(this.ref);\n        if (this.ref && this.ref.current) {\n            Prism.highlightElement(this.ref.current)\n        }\n    };\n\n    render() {\n        const {code, plugins, language, width = '100%'} = this.props;\n        const {containerHeight} = this.state;\n        return (\n            <div ref={node => this.container = node}>\n                <pre\n                    style={{\n                        width,\n                        margin: 0,\n                        height: containerHeight,\n                        borderRadius: 0,\n                    }}\n                    className={!plugins ? \"\" : plugins.join(\" \")}\n                >\n                    <code ref={this.ref} className={`language-${language}`}>\n                      {code}\n                    </code>\n                </pre>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Tabs, Button} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\nimport SourceCode from './SourceCode';\n\nconst {TabPane} = Tabs;\n\n@config({\n    modal: {\n        title: '代码预览',\n        width: '70%',\n    },\n})\nexport default class index extends Component {\n    state = {};\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        const {previewCode, onCancel} = this.props;\n        return (\n            <ModalContent\n                surplusSpace\n                footer={<Button onClick={onCancel}>关闭</Button>}\n                bodyStyle={{padding: '0 0 0 16px'}}\n            >\n                <Tabs>\n                    {previewCode.map(item => {\n                        const {config: {fileTypeName}, code} = item;\n                        return (\n                            <TabPane tab={fileTypeName} key={fileTypeName}>\n                                <SourceCode\n                                    language=\"jsx\"\n                                    plugins={['line-numbers']}\n                                    code={code}\n                                />\n                            </TabPane>\n                        );\n                    })}\n                </Tabs>\n            </ModalContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Button, Form, Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {v4 as uuid} from 'uuid';\nimport PageContent from 'src/layouts/page-content';\nimport {isInputLikeElement} from 'src/library/components/form-element';\nimport config from 'src/commons/config-hoc';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    tableEditable,\n    tableRowDraggable,\n    Operator,\n} from 'src/library/components';\nimport {\n    DB_URL_STORE_KEY,\n    SWAGGER_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n    getFormElementType,\n} from './util';\nimport PreviewModal from './PreviewModal';\nimport './style.less';\n\nconst EditTable = tableEditable(tableRowDraggable(Table));\n\n@config({\n    ajax: true,\n})\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        total: 0,           // 分页中条数\n        pageNum: 1,         // 分页当前页\n        pageSize: 20,       // 分页每页显示条数\n        deleting: false,    // 删除中loading\n        table: {},          // 当前编辑table\n        tables: [],         // 数据库表\n        ignoreFields: [],   // 忽略字段\n        previewVisible: false,\n        previewCode: '',\n    };\n\n    columns = [\n        {title: '注释', dataIndex: 'comment', width: 200},\n        {\n            title: '中文名', dataIndex: 'chinese', width: 200,\n            formProps: (record, index) => {\n                const tabIndex = index + 1; // index * 2 + 1\n                return {\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '列名', dataIndex: 'field',\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n                const {table: {children}} = this.state;\n                const length = children?.length || 0;\n\n                const tabIndex = index + length + 1; // index * 2 + 2;\n                return {\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '表单类型', dataIndex: 'formType',\n            formProps: (record) => {\n                if (record.isTable) return null;\n\n                return {\n                    type: 'select',\n                    showSearch: true,\n                    options: [\n                        {value: 'input', label: '输入框'},\n                        {value: 'hidden', label: '隐藏框'},\n                        {value: 'number', label: '数字框'},\n                        {value: 'textarea', label: '文本框'},\n                        {value: 'password', label: '密码框'},\n                        {value: 'mobile', label: '手机输入框'},\n                        {value: 'email', label: '邮箱输入框'},\n                        {value: 'select', label: '下拉框'},\n                        {value: 'select-tree', label: '下拉树'},\n                        {value: 'checkbox', label: '复选框'},\n                        {value: 'checkbox-group', label: '复选框组'},\n                        {value: 'radio', label: '单选框'},\n                        {value: 'radio-group', label: '单选框组'},\n                        {value: 'radio-button', label: '单选按钮组'},\n                        {value: 'switch', label: '切换按钮'},\n                        {value: 'date', label: '日期选择框'},\n                        {value: 'time', label: '时间选择框'},\n                        {value: 'moth', label: '月份选择框'},\n                        {value: 'date-time', label: '日期+时间选择框'},\n                        {value: 'date-range', label: '日期区间选择框'},\n                        {value: 'cascader', label: '级联下拉框'},\n                        {value: 'transfer', label: '穿梭框'},\n                    ],\n                    onChange: (formType) => {\n                        record.formType = formType;\n                    },\n                };\n            },\n        },\n        {\n            title: '选项', dataIndex: 'operator', width: 170,\n            render: (value, record) => {\n                return renderFieldTags(record, () => this.setState({table: {...this.state.table}}));\n            },\n        },\n        {\n            title: '操作', dataIndex: 'operator', width: 40,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => this.handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        const swaggerUrl = window.localStorage.getItem(SWAGGER_URL_STORE_KEY) || '';\n        this.form.setFieldsValue({swaggerUrl});\n\n        if (dbUrl) {\n            this.form.setFieldsValue({dbUrl});\n            // 初始化查询\n            this.handleDbUrlChange();\n        }\n    }\n\n    handleFocus = (e) => {\n        e.target.select();\n    };\n\n    handleKeyDown = (e, tabIndex) => {\n        const {keyCode, ctrlKey, shiftKey, altKey, metaKey} = e;\n\n        if (ctrlKey || shiftKey || altKey || metaKey) return;\n\n        const {table: {children}} = this.state;\n        const length = children?.length || 0;\n\n        const isUp = keyCode === 38;\n        const isRight = keyCode === 39;\n        const isDown = keyCode === 40;\n        const isLeft = keyCode === 37;\n        const isEnter = keyCode === 13;\n\n        let nextTabIndex;\n\n        if (isDown || isEnter) {\n            if (tabIndex === length || tabIndex === length * 2) {\n                nextTabIndex = undefined;\n            } else {\n                nextTabIndex = tabIndex + 1;\n            }\n        }\n\n        if (isUp) nextTabIndex = tabIndex - 1;\n\n        if (isLeft) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex - 1 <= 0 ? undefined : tabIndex - 1 + length;\n            } else {\n                nextTabIndex = tabIndex - length;\n            }\n        }\n\n        if (isRight) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex + length;\n            } else {\n                nextTabIndex = tabIndex - length === length ? undefined : tabIndex - length + 1;\n            }\n        }\n\n        const nextInput = document.querySelector(`input[tabindex='${nextTabIndex}']`);\n\n        if (nextInput) {\n            // 确保方向键也可以选中\n            setTimeout(() => {\n                nextInput.focus();\n                nextInput.select();\n            });\n        } else if (isEnter || isDown || isRight) {\n            // 新增一行\n            this.handleAdd(true);\n\n            // 等待新增行渲染完成，新增行 input 获取焦点\n            setTimeout(() => {\n                let ti = tabIndex;\n\n                if (isRight) ti = tabIndex - length;\n\n                if ((isDown || isEnter) && tabIndex === length * 2) ti = tabIndex + 1;\n\n                this.handleKeyDown({keyCode: 13}, ti);\n            });\n        }\n    };\n\n    handleTypeChange = (e) => {\n        const type = e.target.value;\n        if (type === 'mysql') {\n            this.handleDbUrlChange();\n        }\n        if (type === 'customer') {\n            this.handleModuleNameChange();\n        }\n        if (type === 'swagger') {\n            this.handleSwaggerChange();\n        }\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = this.form.getFieldValue('dbUrl');\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n\n        // 清空数据\n        this.setState({tables: [], table: {}});\n        this.form.setFieldsValue({tableName: undefined});\n\n        if (!dbUrl) return;\n\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/tables', {dbUrl}, {baseURL: '/'})\n            .then(res => {\n                const {dataSource} = getTables(res);\n                this.setState({tables: dataSource}, () => {\n\n                    // 默认选中第一个表\n                    const tableName = dataSource[0]?.tableName;\n\n                    this.form.setFieldsValue({tableName});\n                    this.handleTableNameChange(tableName);\n                });\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleSwaggerChange = () => {\n        const swaggerUrl = this.form.getFieldValue('swaggerUrl');\n        window.localStorage.setItem(SWAGGER_URL_STORE_KEY, swaggerUrl);\n\n        // 清空数据\n        this.setState({tables: [], table: {}});\n        this.form.setFieldsValue({tableName: undefined});\n\n        if (!swaggerUrl) return;\n\n\n        const method = this.form.getFieldValue('method');\n        const userName = this.form.getFieldValue('userName');\n        const password = this.form.getFieldValue('password');\n        const params = {\n            swaggerUrl,\n            method,\n            userName,\n            password,\n        };\n\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/swagger', params, {baseURL: '/'})\n            .then(res => {\n                const {moduleName: tableName, queries, columns, forms} = res;\n\n                const children = [];\n                (queries || []).forEach(item => {\n                    const {type, field, label, required} = item;\n                    const chinese = getLabel(label);\n                    const formType = getFormElementType({oType: type, label: chinese});\n\n                    children.push({\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: label,\n                        chinese,\n                        name: field,\n\n                        type,\n                        formType,\n                        length: 0,\n                        isNullable: !required,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isIgnore: false,\n                    });\n                });\n\n                (columns || []).forEach(item => {\n                    const {title, dataIndex} = item;\n                    if (!children.find(it => it.field === dataIndex)) {\n                        const formType = getFormElementType({oType: 'input', label: title});\n                        children.push(\n                            {\n                                id: uuid(),\n                                tableName,\n                                field: dataIndex,\n                                comment: title,\n                                chinese: getLabel(title),\n                                name: dataIndex,\n\n                                type: 'string',\n                                formType,\n                                length: 0,\n                                isNullable: true,\n\n                                isColumn: true,\n                                isQuery: false,\n                                isForm: true,\n                                isIgnore: false,\n                            },\n                        );\n                    }\n                });\n\n                (forms || []).forEach(item => {\n                    const {type, field, label} = item;\n                    if (!children.find(it => it.field === field)) {\n                        const formType = getFormElementType({oType: type, label: label});\n\n                        children.push({\n                            id: uuid(),\n                            tableName,\n                            field,\n                            comment: label,\n                            chinese: getLabel(label),\n                            name: field,\n\n                            type,\n                            formType,\n                            length: 0,\n                            isNullable: true,\n\n                            isColumn: true,\n                            isQuery: false,\n                            isForm: true,\n                            isIgnore: false,\n                        });\n                    }\n                });\n\n                const table = {\n                    id: tableName,\n                    isTable: true,\n                    tableName,\n                    comment: '',\n                    listPage: true,\n                    query: true,\n                    selectable: true,\n                    pagination: true,\n                    serialNumber: true,\n                    add: true,\n                    operatorEdit: true,\n                    operatorDelete: true,\n                    batchDelete: true,\n\n                    modalEdit: true,\n                    pageEdit: false,\n                    children,\n                };\n\n                this.setState({table});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleModuleNameChange = () => {\n        // 清空数据\n        this.setState({tables: [], table: {}});\n\n        const moduleName = this.form.getFieldValue('moduleName');\n        if (!moduleName) return;\n\n        const tableName = moduleName;\n        const field = 'name';\n        this.setState({\n            table: {\n                id: tableName,\n                isTable: true,\n                tableName,\n                comment: '',\n                listPage: true,\n                query: true,\n                selectable: true,\n                pagination: true,\n                serialNumber: true,\n                add: true,\n                operatorEdit: true,\n                operatorDelete: true,\n                batchDelete: true,\n\n                modalEdit: true,\n                pageEdit: false,\n                children: [\n                    {\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: '用户名',\n                        chinese: '用户名',\n                        name: field,\n\n                        type: 'string',\n                        formType: 'input',\n                        length: 0,\n                        isNullable: true,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isIgnore: false,\n                    },\n                ],\n            },\n        });\n\n    };\n\n    handleDelete = (id) => {\n        const {table} = this.state;\n        const {children} = table;\n        table.children = children.filter(item => item.id !== id);\n        this.setState({table: {...table}});\n    };\n\n    handleTableNameChange = (tableName) => {\n        const {tables} = this.state;\n        const table = tables.find(item => item.tableName === tableName);\n        this.setState({table});\n    };\n\n    handleAdd = (append) => {\n        const {table} = this.state;\n        if (!table.children) table.children = [];\n        const length = table.children.length;\n        const {tableName, children} = table;\n        const field = `field${length + 1}`;\n        const id = uuid();\n\n        const newRecord = {\n            id,\n            tableName,\n            field,\n            comment: '新增列',\n            chinese: '新增列',\n            name: field,\n\n            type: 'string',\n            formType: 'input',\n            length: 0,\n            isNullable: true,\n\n            isColumn: true,\n            isQuery: false,\n            isForm: true,\n            isIgnore: false,\n        };\n\n        append ? children.push(newRecord) : children.unshift(newRecord);\n        table.children = [...children];\n        this.setState({table: {...table}});\n    };\n\n    /** 获取参数 */\n    getParams = async (showTip) => {\n        await this.form.validateFields();\n\n        if (!this.state.table?.children?.length) {\n            Modal.error({\n                icon: <ExclamationCircleOutlined/>,\n                title: '温馨提示',\n                content: '字段配置为空，无法生成，请添加字段信息！',\n            });\n\n            return Promise.reject();\n        }\n\n        return new Promise((resolve, reject) => {\n            const getParams = () => {\n                const {table} = this.state;\n                const children = table.children\n                    .map(it => ({\n                        field: it.field,\n                        chinese: getLabel(it.chinese),\n                        name: it.name,\n                        type: it.type,\n                        formType: it.formType || 'input',\n                        length: isInputLikeElement(it.formType || 'input') ? it.length : 0,\n                        isNullable: it.isNullable,\n                        isForm: it.isForm,\n                        isColumn: it.isColumn,\n                        isQuery: it.isQuery,\n                    }));\n\n                const params = {\n                    tables: [{\n                        ...table,\n                        children,\n                    }],\n                };\n\n                resolve(params);\n            };\n\n            if (!showTip) {\n                getParams();\n                return;\n            }\n\n            Modal.confirm({\n                icon: <ExclamationCircleOutlined/>,\n                title: '同名文件将被覆盖，是否继续？',\n                content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n                onOk: () => {\n                    getParams();\n                },\n                onCancel: () => {\n                    reject();\n                },\n            });\n        });\n    };\n\n    handleGen = async () => {\n        const params = await this.getParams(true);\n\n        this.setState({loading: true});\n        this.props.ajax.post('/gen/tables', params, {baseURL: '/', successTip: '生成成功！'})\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handlePreview = async () => {\n        const params = await this.getParams();\n\n        this.setState({loading: true});\n        this.props.ajax.post('/gen/preview', params, {baseURL: '/'})\n            .then(res => {\n                this.setState({previewVisible: true, previewCode: res});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleSortEnd = ({newIndex, oldIndex}) => {\n        const {table} = this.state;\n        const {children = []} = table;\n\n        children.splice(newIndex, 0, ...children.splice(oldIndex, 1));\n        table.children = [...children];\n\n        this.setState({table: {...table}});\n    };\n\n    render() {\n        const {\n            loading,\n            deleting,\n            tables,\n            table,\n            previewVisible,\n            previewCode,\n        } = this.state;\n\n        const formProps = {\n            style: {paddingLeft: 16},\n        };\n\n        return (\n            <PageContent loading={loading || deleting} style={{padding: 0, margin: 0}}>\n                <QueryBar>\n                    <Form ref={form => this.form = form} initialValues={{type: 'mysql', method: 'get', userName: 'admin', password: '123456'}}>\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                width={240}\n                                type=\"radio-button\"\n                                name=\"type\"\n                                options={[\n                                    {value: 'swagger', label: 'Swagger'},\n                                    {value: 'mysql', label: 'MySql'},\n                                    {value: 'customer', label: '自定义'},\n                                ]}\n                                onChange={this.handleTypeChange}\n                            />\n                            <Form.Item style={{marginBottom: 0}} shouldUpdate={(prevValues, currValues) => prevValues.type !== currValues.type}>\n                                {({getFieldValue}) => {\n                                    const type = getFieldValue('type');\n                                    if (type === 'mysql') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={500}\n                                                    label=\"数据库地址\"\n                                                    name=\"dbUrl\"\n                                                    placeholder=\"mysql://username:password@host:port/database\"\n                                                    onChange={this.handleDbUrlChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    elementStyle={{width: 200}}\n                                                    type=\"select\"\n                                                    showSearch\n                                                    label=\"数据库表\"\n                                                    name=\"tableName\"\n                                                    onChange={this.handleTableNameChange}\n                                                    options={tables.map(item => ({value: item.tableName, label: `${item.tableName} ${item.comment}`}))}\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n                                    if (type === 'swagger') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={400}\n                                                    label=\"接口地址\"\n                                                    name=\"swaggerUrl\"\n                                                    placeholder=\"http(s)://host:port/path\"\n                                                    onChange={this.handleSwaggerChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    type=\"select\"\n                                                    width={100}\n                                                    placeholder=\"接口方法\"\n                                                    name=\"method\"\n                                                    options={[\n                                                        {value: 'get', label: 'GET'},\n                                                        {value: 'post', label: 'POST'},\n                                                        {value: 'put', label: 'PUT'},\n                                                    ]}\n                                                    onChange={this.handleSwaggerChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={120}\n                                                    placeholder=\"Swagger用户\"\n                                                    name=\"userName\"\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={120}\n                                                    placeholder=\"Swagger密码\"\n                                                    name=\"password\"\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n\n                                    if (type === 'customer') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={300}\n                                                    label=\"模块名\"\n                                                    name=\"moduleName\"\n                                                    placeholder=\"比如：user-center\"\n                                                    rules={[{required: true, message: '请输入模块名！'}]}\n                                                    onChange={this.handleModuleNameChange}\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n                                }}\n                            </Form.Item>\n                        </FormRow>\n                    </Form>\n                </QueryBar>\n                <div style={{marginBottom: 8, display: 'flex', justifyContent: 'space-between'}}>\n                    <div>\n                        <Button type=\"primary\" onClick={() => this.handleAdd()}>添加</Button>\n                        <Button style={{margin: '0 8px'}} type=\"primary\" onClick={this.handleGen}>生成文件</Button>\n                        <Button onClick={this.handlePreview}>代码预览</Button>\n                    </div>\n                    <div style={{paddingRight: 23, paddingTop: 3}}>\n                        {renderTags(table, () => this.setState({table: {...table}}))}\n                    </div>\n                </div>\n                <EditTable\n                    onSortEnd={this.handleSortEnd}\n                    serialNumber\n                    columns={this.columns}\n                    dataSource={table?.children}\n                    rowKey=\"id\"\n                />\n                <PreviewModal\n                    visible={previewVisible}\n                    previewCode={previewCode}\n                    onOk={() => this.setState({previewVisible: false})}\n                    onCancel={() => this.setState({previewVisible: false})}\n                />\n            </PageContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Tabs} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport Fast from './Fast';\nimport Single from './Single';\nimport './style.less';\n\nconst {TabPane} = Tabs;\n\n@config({\n    title: '代码生成',\n    path: '/gen',\n})\nexport default class index extends Component {\n    render() {\n        return (\n            <PageContent styleName=\"root\">\n                <Tabs defaultActiveKey=\"single\">\n                    <TabPane key=\"fast\" tab=\"快速生成\">\n                        <Fast/>\n                    </TabPane>\n                    <TabPane key=\"single\" tab=\"单独生成\">\n                        <Single/>\n                    </TabPane>\n                </Tabs>\n            </PageContent>\n        );\n    }\n}\n","module.exports = (__webpack_require__(6))(653);","module.exports = (__webpack_require__(6))(372);"],"sourceRoot":""}