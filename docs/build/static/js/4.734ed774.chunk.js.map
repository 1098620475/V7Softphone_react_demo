{"version":3,"sources":["components/tree-editor/TreeModal.jsx","components/tree-editor/index.js","pages/local/A.jsx","../delegated 115 from dll-reference reactVendor_45666092243205e01b0c","../delegated 708 from dll-reference reactVendor_45666092243205e01b0c","components/tree-editor/style.less"],"names":["TreeNode","TreeModal","config","modal","title","width","state","expandAll","expandedKeys","checkedKeysStr","editKey","editValue","handleOk","onOk","props","checkedKeys","handleBlur","setTimeout","setState","handleSave","onSave","console","log","handleDelete","key","onDelete","handleAdd","onAdd","handleExpandAll","options","nextExpandAll","map","item","renderTreeNodes","length","loop","nodes","node","children","filter","parentKey","isEdit","nodeTitle","id","defaultValue","autoFocus","onBlur","onChange","e","target","value","onClick","preventDefault","stopPropagation","style","color","onConfirm","this","onCancel","surplusSpace","size","type","selectable","defaultExpandAll","onExpand","checkStrictly","checkable","onCheck","info","checked","description","nextProps","prevState","join","nextState","forEach","isNew","includes","push","React","Component","defaultProps","TreeEditor","visible","Array","isArray","height","border","display","alignItems","paddingLeft","flex","overflow","textOverflow","whiteSpace","padding","cursor","OPTIONS","A","path","handleChange","uuid","nextOptions","data","find","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/4.734ed774.chunk.js","sourcesContent":["import React from 'react';\nimport { Input, Tree, Empty, Button, Popconfirm } from 'antd';\nimport { EditOutlined, DeleteOutlined, PlusOutlined, SaveOutlined } from '@ant-design/icons';\nimport config from 'src/commons/config-hoc';\nimport { ModalContent } from 'src/library/components';\nimport PropTypes from 'prop-types';\nimport './style.less';\n\nconst { TreeNode } = Tree;\n\n@config({\n    modal: {\n        title: '标签',\n        width: 500,\n    },\n})\nexport default class TreeModal extends React.Component {\n    static propTypes = {\n        checkedKeys: PropTypes.array, // 用户选中的节点\n        options: PropTypes.array, // 树节点数据\n        onOk: PropTypes.func, // 点击确定按钮\n        onCancel: PropTypes.func, // 点击取消按钮\n        onAdd: PropTypes.func, // 点击添加节点按钮\n        onDelete: PropTypes.func, // 点击删除节点按钮\n        onSave: PropTypes.func, // 保存节点事件\n    };\n\n    static defaultProps = {\n        options: [],\n        checkedKeys: [],\n    };\n\n    state = {\n        expandAll: false,\n        expandedKeys: [],\n        checkedKeysStr: '',\n        editKey: null,\n        editValue: '',\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { checkedKeys = [], options } = nextProps;\n        const checkedKeysStr = checkedKeys.join(',');\n\n        let nextState = null;\n\n        if (checkedKeysStr !== prevState.checkedKeysStr) {\n            nextState = {};\n\n            nextState.checkedKeys = checkedKeys;\n            nextState.expandedKeys = checkedKeys;\n            nextState.checkedKeysStr = checkedKeysStr;\n        }\n        if (options?.length) {\n            const expandedKeys = nextState?.expandedKeys || [];\n            options.forEach(item => {\n                const { isNew, parentKey } = item;\n                if (isNew && !prevState.expandedKeys.includes(parentKey)) {\n                    expandedKeys.push(parentKey);\n                }\n            });\n\n            if (!nextState) nextState = {};\n            nextState.expandedKeys = [ ...expandedKeys, ...prevState.expandedKeys ];\n        }\n\n        return nextState;\n    }\n\n    handleOk = () => {\n        const { onOk } = this.props;\n        const { checkedKeys } = this.state;\n        onOk && onOk(checkedKeys);\n    };\n\n    handleBlur = () => {\n        setTimeout(() => {\n            this.setState({ editKey: null, editValue: '' });\n        }, 100);\n    };\n\n    handleSave = () => {\n        const { editKey, editValue } = this.state;\n        const { onSave } = this.props;\n        console.log(editKey, editValue);\n        onSave && onSave(editKey, editValue);\n    };\n\n    handleDelete = (key) => {\n        const { onDelete } = this.props;\n        onDelete && onDelete(key);\n    };\n\n    handleAdd = (key) => {\n        const { onAdd } = this.props;\n        onAdd && onAdd(key);\n    };\n\n    handleExpandAll = () => {\n        const { options } = this.props;\n        const { expandAll } = this.state;\n        const nextExpandAll = !expandAll;\n        const expandedKeys = nextExpandAll ? options.map(item => item.key) : [];\n\n        this.setState({ expandAll: nextExpandAll, expandedKeys });\n    };\n\n    renderTreeNodes = () => {\n        const { options } = this.props;\n        const { editKey } = this.state;\n\n        if (!options?.length) return null;\n\n        const loop = nodes => {\n            return nodes.map(node => {\n                const {\n                    key,\n                    title,\n                } = node;\n                const children = options.filter(item => item.parentKey === key);\n                const isEdit = editKey === key;\n\n                let nodeTitle = isEdit ? (\n                    <Input\n                        id={`input_${key}`}\n                        defaultValue={title}\n                        autoFocus\n                        onBlur={this.handleBlur}\n                        onChange={e => this.setState({ editValue: e.target.value })}\n                        onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }}\n                    />\n                ) : title;\n\n                nodeTitle = (\n                    <div styleName=\"tree-node-title\">\n                        <div styleName=\"title\">\n                            {nodeTitle}\n                        </div>\n                        <div styleName=\"icons\" onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }}>\n                            {isEdit ? (\n                                <SaveOutlined\n                                    style={{ color: 'green' }}\n                                    onClick={() => this.handleSave()}\n                                />\n                            ) : (\n                                <>\n                                    <EditOutlined\n                                        style={{ color: '#f1882a' }}\n                                        onClick={() => this.setState({ editKey: key, editValue: title })}\n                                    />\n                                    <Popconfirm\n                                        title={`您确定删除标签「${title}」吗`}\n                                        onConfirm={() => this.handleDelete(key)}\n                                    >\n                                        <DeleteOutlined\n                                            style={{ color: 'red' }}\n                                        />\n                                    </Popconfirm>\n                                    <PlusOutlined\n                                        style={{ color: 'green' }}\n                                        onClick={() => this.handleAdd(key)}\n                                    />\n                                </>\n                            )}\n                        </div>\n                    </div>\n                );\n\n                if (children?.length) {\n                    return (\n                        <TreeNode\n                            key={key}\n                            title={nodeTitle}\n                        >\n                            {loop(children)}\n                        </TreeNode>\n                    );\n                }\n\n                return (\n                    <TreeNode key={key} title={nodeTitle}/>\n                );\n            });\n        };\n\n        return loop(options.filter(item => !item.parentKey));\n    };\n\n    render() {\n        const { onCancel, options } = this.props;\n        const { expandedKeys, checkedKeys, expandAll } = this.state;\n\n        return (\n            <ModalContent\n                surplusSpace\n                onOk={this.handleOk}\n                onCancel={onCancel}\n            >\n                {options?.length ? (\n                    <div styleName=\"box\">\n                        <div styleName=\"top\">\n                            <Button\n                                styleName=\"expand-all\"\n                                size=\"small\"\n                                type=\"primary\"\n                                onClick={() => this.handleExpandAll()}\n                            >\n                                {expandAll ? '全部收起' : '全部展开'}\n                            </Button>\n                        </div>\n                        <div styleName=\"content\">\n                            <Tree\n                                selectable={false}\n                                defaultExpandAll\n                                expandedKeys={expandedKeys}\n                                onExpand={expandedKeys => this.setState({ expandedKeys })}\n\n                                checkStrictly\n                                checkable\n                                checkedKeys={checkedKeys}\n                                onCheck={info => {\n                                    const { checked: checkedKeys } = info;\n                                    this.setState({ checkedKeys });\n                                }}\n                            >\n                                {this.renderTreeNodes()}\n                            </Tree>\n                        </div>\n                    </div>\n                ) : (\n                    <div styleName=\"empty\">\n                        <Empty\n                            description=\"暂无任何标签\"\n                        >\n                            <Button\n                                type=\"primary\"\n                                onClick={() => this.handleAdd()}\n                            >\n                                <PlusOutlined/> 创建标签\n                            </Button>\n                        </Empty>\n                    </div>\n                )}\n            </ModalContent>\n        );\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EditOutlined } from '@ant-design/icons';\nimport TreeModal from './TreeModal';\n\nexport default class TreeEditor extends React.Component {\n    static propTypes = {\n        value: PropTypes.array,\n        onChange: PropTypes.func,\n        options: TreeEditor.prototype.array,\n        onAdd: PropTypes.func, // 点击添加节点按钮\n        onDelete: PropTypes.func, // 点击删除节点按钮\n        onSave: PropTypes.func, // 保存节点事件\n    };\n\n    static defaultProps = {\n        options: [],\n    };\n\n    state = {\n        visible: true,\n    };\n\n    render() {\n        const { style, value, options, onChange, onAdd, onDelete, onSave } = this.props;\n        const { visible } = this.state;\n        const stl = {\n            height: 28,\n            border: '1px solid #e8e8e8',\n            width: 200,\n        };\n        let title = '';\n        if (value && Array.isArray(value) && value.length) {\n            title = options.filter(item => value.includes(item.key))\n                .map(item => item.title)\n                .join(',');\n        }\n        return (\n            <div style={{ ...stl, ...style }} title={title}>\n                <div style={{ display: 'flex', alignItems: 'center', paddingLeft: 8, width: '100%', height: '100%' }}>\n                    <span style={{ flex: 1, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>{title}</span>\n                    <EditOutlined\n                        style={{ flex: 0, padding: '0 8px', cursor: 'pointer' }}\n                        onClick={() => this.setState({ visible: true })}\n                    />\n                </div>\n                <TreeModal\n                    visible={visible}\n                    onOk={value => {\n                        onChange(value);\n                        this.setState({ visible: false });\n                    }}\n                    onCancel={() => this.setState({ visible: false })}\n                    checkedKeys={value}\n                    options={options}\n                    onAdd={onAdd}\n                    onDelete={onDelete}\n                    onSave={onSave}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport config from 'src/commons/config-hoc';\nimport PageContent from 'src/layouts/page-content';\nimport TreeEditor from 'src/components/tree-editor';\nimport { v4 as uuid } from 'uuid';\n\nconst OPTIONS = [\n    { key: '1', title: '我是标签' },\n    { key: '2', parentKey: '1', title: '统一邮箱' },\n    { key: '3', title: '洪鲁娜娜' },\n    { key: '4', title: 'Java' },\n    { key: '5', title: '变形金刚' },        // 好的\n    { key: '6', title: 'Good1' },           // 可以\n    { key: '7', title: 'Good2' }, // good \n    { key: '8', title: 'Good3' },\n    { key: '9', title: 'Good4' },\n    { key: '10', title: 'Good5' },\n    { key: '11', title: 'Good6' },\n    { key: '12', title: 'Good7' },\n    { key: '13', title: 'Good8' },\n];\n\n@config({ path: '/aa' })\nexport default class A extends React.Component {\n\n    state = {\n        value: [],\n        options: [],\n    };\n\n    componentDidMount() {\n        this.setState({\n            options: OPTIONS,\n        });\n    }\n\n    handleChange = (checkedKeys) => {\n        this.setState({ value: checkedKeys });\n    };\n\n    // 添加子节点\n    handleAdd = (parentKey) => {\n        const { options } = this.state;\n        options.push({ parentKey, key: uuid(), title: '新增标签', isNew: true });\n\n        this.setState({ options: [...options] });\n    };\n\n    // 删除节点\n    handleDelete = (key) => {\n        const { options } = this.state;\n        const nextOptions = options.filter(item => item.key !== key);\n        this.setState({ options: nextOptions });\n    };\n\n    // 保存节点\n    handleSave = (key, title) => {\n        const { options } = this.state;\n        const data = options.find(item => item.key === key);\n        console.log(key, title, data);\n        if (data) data.title = title;\n\n        this.setState({ options: [...options] });\n    };\n\n    render() {\n        const { options, value } = this.state;\n        return (\n            <PageContent>\n                <TreeEditor\n                    value={value}\n                    onChange={this.handleChange}\n                    options={options}\n                    onAdd={parentKey => this.handleAdd(parentKey)}\n                    onDelete={key => this.handleDelete(key)}\n                    onSave={(key, title) => this.handleSave(key, title)}\n                />\n            </PageContent>\n        );\n    }\n};\n","module.exports = (__webpack_require__(6))(115);","module.exports = (__webpack_require__(6))(708);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"empty-2lz4o\",\"expand-all\":\"expand-all-3_p8B\",\"box\":\"box-3JdXu\",\"top\":\"top-2Uo4h\",\"content\":\"content-kLBng\",\"tree-node-title\":\"tree-node-title-1C9y4\",\"title\":\"title-2NIw9\",\"icons\":\"icons-28gL2\"};"],"sourceRoot":""}