{"version":3,"sources":["pages/gen/Fast.jsx","pages/gen/SourceCode.jsx","pages/gen/PreviewModal.jsx","pages/gen/Single.jsx","pages/gen/index.jsx","../delegated 59 from dll-reference reactVendor_176180990e8e122c54da","../delegated 197 from dll-reference reactVendor_176180990e8e122c54da","../delegated 368 from dll-reference reactVendor_176180990e8e122c54da","../delegated 697 from dll-reference reactVendor_176180990e8e122c54da"],"names":["EditTable","tableEditable","Table","renderContent","value","record","obj","children","props","isTable","colSpan","Fast","config","ajax","state","loading","selectedRowKeys","dataSource","columns","title","dataIndex","width","style","paddingLeft","formProps","index","required","tabIndex","onBlur","e","chinese","target","render","field","tags","renderTags","setState","textAlign","align","renderFieldTags","handleSubmit","values","get","baseURL","then","res","getTables","finally","handleDbUrlChange","dbUrl","window","localStorage","setItem","DB_URL_STORE_KEY","handleGen","confirm","icon","content","onOk","params","tables","filter","item","includes","id","map","it","getLabel","name","type","length","isNullable","isForm","isColumn","isQuery","post","successTip","console","log","getItem","this","form","setFieldsValue","submit","padding","margin","ref","onFinish","label","placeholder","onChange","htmlType","onClick","rowSelection","renderCell","checked","originNode","rowKey","Component","SourceCode","containerHeight","setHeight","winHeight","document","documentElement","clientHeight","body","height","highlight","current","Prism","highlightElement","React","createRef","addEventListener","removeEventListener","code","plugins","language","node","container","borderRadius","className","join","TabPane","modal","previewCode","onCancel","surplusSpace","footer","bodyStyle","fileTypeName","tab","key","tableRowDraggable","UserCenter","total","pageNum","pageSize","deleting","table","ignoreFields","previewVisible","fastEdit","onFocus","handleFocus","onKeyDown","handleKeyDown","showSearch","options","formType","items","color","onConfirm","handleDelete","select","keyCode","ctrlKey","shiftKey","altKey","metaKey","nextTabIndex","isRight","isDown","isEnter","undefined","nextInput","querySelector","setTimeout","focus","handleAdd","ti","handleTypeChange","handleModuleNameChange","handleSwaggerChange","getFieldValue","tableName","handleTableNameChange","swaggerUrl","SWAGGER_URL_STORE_KEY","method","userName","password","moduleName","queries","forms","forEach","getFormElementType","oType","push","uuid","comment","isIgnore","find","listPage","query","selectable","pagination","serialNumber","add","operatorEdit","operatorDelete","batchDelete","modalEdit","pageEdit","append","newRecord","unshift","getParams","showTip","a","validateFields","error","Promise","reject","resolve","isInputLikeElement","handlePreview","handleSortEnd","newIndex","oldIndex","splice","handleFastEdit","nextVisible","getElementById","rows","split","str","trim","replace","getFormElementName","fields","initialValues","Item","marginBottom","shouldUpdate","prevValues","currValues","elementStyle","rules","message","display","justifyContent","disabled","paddingRight","paddingTop","position","TextArea","top","right","bottom","left","defaultValue","onSortEnd","visible","side","path","defaultActiveKey","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/6.146ad295.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\nimport {FormElement, FormRow, Table, tableEditable} from 'ra-lib';\nimport config from 'src/commons/config-hoc';\nimport { PageContent } from 'ra-lib';\nimport {\n    DB_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n} from './util';\nimport './style.less';\n\nconst EditTable = tableEditable(Table);\n\nconst renderContent = (value, record) => {\n    const obj = {\n        children: value,\n        props: {},\n    };\n    if (record.isTable) {\n        obj.props.colSpan = 0;\n    }\n    return obj;\n};\n\n\n@config({ajax: true})\nexport default class Fast extends Component {\n    state = {\n        loading: false,\n        selectedRowKeys: [],\n        dataSource: [],\n    };\n\n    columns = [\n        {title: '表名', dataIndex: 'tableName', width: 200},\n        {title: '数据库注释', dataIndex: 'comment', width: 200},\n        {\n            title: <span style={{paddingLeft: 10}}>中文名</span>, dataIndex: 'chinese', width: 250,\n            formProps: (record, index) => {\n                return {\n                    required: true,\n                    tabIndex: index + 1, // index * 2 + 1\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                };\n            },\n            render: renderContent,\n        },\n        {\n            title: <span style={{paddingLeft: 10}}>列名</span>, dataIndex: 'field',\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n\n                return {\n                    required: true,\n                    tabIndex: index + 100, // index * 2 + 2\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                };\n            },\n            render: (value, record) => {\n                if (record.isTable) {\n                    const tags = renderTags(record, () => this.setState({dataSource: [...this.state.dataSource]}));\n                    return {\n                        children: <div style={{textAlign: 'right'}}>{tags}</div>,\n                        props: {\n                            colSpan: 3,\n                        },\n                    };\n                }\n                return value;\n            },\n        },\n        {\n            title: '选项', dataIndex: 'options', width: 160, align: 'right',\n            render: (value, record) => {\n                const children = renderFieldTags(record, () => this.setState({dataSource: [...this.state.dataSource]}));\n                return {\n                    children,\n                    props: {colSpan: record.isTable ? 0 : 1},\n                };\n            },\n        },\n        // {title: '是否为空', dataIndex: 'nullable'},\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        if (dbUrl) {\n            this.form.setFieldsValue({dbUrl});\n            // 初始化查询\n            this.form.submit();\n        }\n    }\n\n    handleSubmit = (values) => {\n        this.setState({loading: true});\n        this.props.ajax.get('/gen/tables', values, {baseURL: '/'})\n            .then(res => {\n                const {dataSource, selectedRowKeys} = getTables(res);\n\n                this.setState({dataSource, selectedRowKeys});\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = e.target.value;\n\n        // 进行本地存储，记录数据库地址，使用原生存储，不区分用户\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n    };\n\n    handleGen = () => {\n        Modal.confirm({\n            icon: <ExclamationCircleOutlined/>,\n            title: '同名文件将被覆盖，是否继续？',\n            content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n            onOk: () => {\n                const {selectedRowKeys, dataSource} = this.state;\n                const tables = dataSource.filter(item => selectedRowKeys.includes(item.id));\n                const result = tables.map(item => {\n                    const children = item.children\n                        .map(it => ({\n                            field: it.field,\n                            chinese: getLabel(it.chinese),\n                            name: it.name,\n                            type: it.type,\n                            length: it.length,\n                            isNullable: it.isNullable,\n                            isForm: it.isForm,\n                            isColumn: it.isColumn,\n                            isQuery: it.isQuery,\n                        }));\n\n                    return {\n                        ...item,\n                        children,\n                    };\n                });\n                const params = {\n                    tables: result,\n                };\n                this.setState({loading: true});\n                this.props.ajax.post('/gen/tables', params, {baseURL: '/', successTip: '生成成功！'})\n                    .then(res => {\n                        console.log(res);\n                    })\n                    .finally(() => this.setState({loading: false}));\n            },\n        });\n    };\n\n    render() {\n        const {dataSource, selectedRowKeys, loading} = this.state;\n\n        const formProps = {\n            width: '50%',\n        };\n        return (\n            <PageContent style={{padding: 0, margin: 0}} loading={loading}>\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                >\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"数据库地址\"\n                            name=\"dbUrl\"\n                            placeholder=\"mysql://username:password@host:port/database\"\n                            required\n                            onChange={this.handleDbUrlChange}\n                        />\n                        <Button style={{margin: '0 8px'}} type=\"primary\" htmlType=\"submit\">获取数据库表</Button>\n                        <Button onClick={this.handleGen}>生成选中表</Button>\n                    </FormRow>\n                </Form>\n                <EditTable\n                    rowSelection={{\n                        selectedRowKeys,\n                        onChange: selectedRowKeys => this.setState({selectedRowKeys}),\n                        renderCell: (checked, record, index, originNode) => record.isTable ? originNode : null,\n                    }}\n                    dataSource={dataSource}\n                    columns={this.columns}\n                    rowKey=\"id\"\n                />\n            </PageContent>\n        );\n    }\n}\n","import React from \"react\"\nimport Prism from \"prismjs\"\n\nexport default class SourceCode extends React.Component {\n    constructor(props) {\n        super(props)\n        this.ref = React.createRef()\n    }\n\n    state = {\n        containerHeight: 'auto',\n    };\n\n    componentDidMount() {\n        this.highlight()\n\n        this.setHeight();\n        window.addEventListener('resize', this.setHeight);\n    }\n\n    componentDidUpdate() {\n        this.highlight()\n    }\n\n    setHeight = () => {\n        const winHeight = document.documentElement.clientHeight || document.body.clientHeight;\n        console.log(winHeight);\n        const height = winHeight - 286;\n\n        this.setState({containerHeight: height});\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setHeight);\n    }\n\n    highlight = () => {\n        console.log(this.ref);\n        if (this.ref && this.ref.current) {\n            Prism.highlightElement(this.ref.current)\n        }\n    };\n\n    render() {\n        const {code, plugins, language, width = '100%'} = this.props;\n        const {containerHeight} = this.state;\n        return (\n            <div ref={node => this.container = node}>\n                <pre\n                    style={{\n                        width,\n                        margin: 0,\n                        height: containerHeight,\n                        borderRadius: 0,\n                    }}\n                    className={!plugins ? \"\" : plugins.join(\" \")}\n                >\n                    <code ref={this.ref} className={`language-${language}`}>\n                      {code}\n                    </code>\n                </pre>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {Tabs, Button} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'ra-lib';\nimport SourceCode from './SourceCode';\n\nconst {TabPane} = Tabs;\n\n@config({\n    modal: {\n        title: '代码预览',\n        width: '70%',\n    },\n})\nexport default class index extends Component {\n    state = {};\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        const {previewCode, onCancel} = this.props;\n        return (\n            <ModalContent\n                surplusSpace\n                footer={<Button onClick={onCancel}>关闭</Button>}\n                bodyStyle={{padding: '0 0 0 16px'}}\n            >\n                <Tabs>\n                    {previewCode.map(item => {\n                        const {config: {fileTypeName}, code} = item;\n                        return (\n                            <TabPane tab={fileTypeName} key={fileTypeName}>\n                                <SourceCode\n                                    language=\"jsx\"\n                                    plugins={['line-numbers']}\n                                    code={code}\n                                />\n                            </TabPane>\n                        );\n                    })}\n                </Tabs>\n            </ModalContent>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Button, Form, Modal, Input } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { v4 as uuid } from 'uuid';\nimport config from 'src/commons/config-hoc';\nimport {\n    isInputLikeElement,\n    PageContent,\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    tableEditable,\n    tableRowDraggable,\n    Operator,\n} from 'ra-lib';\nimport {\n    DB_URL_STORE_KEY,\n    SWAGGER_URL_STORE_KEY,\n    renderTags,\n    renderFieldTags,\n    getTables,\n    getLabel,\n    getFormElementType,\n    getFormElementName,\n} from './util';\nimport PreviewModal from './PreviewModal';\nimport './style.less';\n\nconst EditTable = tableEditable(tableRowDraggable(Table));\n\n@config({\n    ajax: true,\n})\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        total: 0,           // 分页中条数\n        pageNum: 1,         // 分页当前页\n        pageSize: 20,       // 分页每页显示条数\n        deleting: false,    // 删除中loading\n        table: {},          // 当前编辑table\n        tables: [],         // 数据库表\n        ignoreFields: [],   // 忽略字段\n        previewVisible: false,\n        previewCode: '',\n        fastEdit: false,   // test area 快速编辑\n    };\n\n    columns = [\n        { title: '注释', dataIndex: 'comment', width: 200 },\n        {\n            title: '中文名', dataIndex: 'chinese', width: 200,\n            formProps: (record, index) => {\n                const tabIndex = index + 1; // index * 2 + 1\n                return {\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.chinese = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '列名', dataIndex: 'field',\n            formProps: (record, index) => {\n                if (record.isTable) return null;\n                const { table: { children } } = this.state;\n                const length = children?.length || 0;\n\n                const tabIndex = index + length + 1; // index * 2 + 2;\n                return {\n                    required: true,\n                    tabIndex,\n                    onFocus: this.handleFocus,\n                    onBlur: (e) => {\n                        record.field = e.target.value;\n                    },\n                    onKeyDown: (e) => this.handleKeyDown(e, tabIndex),\n                };\n            },\n        },\n        {\n            title: '表单类型', dataIndex: 'formType',\n            formProps: (record) => {\n                if (record.isTable) return null;\n\n                return {\n                    type: 'select',\n                    showSearch: true,\n                    options: [\n                        { value: 'input', label: '输入框' },\n                        { value: 'hidden', label: '隐藏框' },\n                        { value: 'number', label: '数字框' },\n                        { value: 'textarea', label: '文本框' },\n                        { value: 'password', label: '密码框' },\n                        { value: 'mobile', label: '手机输入框' },\n                        { value: 'email', label: '邮箱输入框' },\n                        { value: 'select', label: '下拉框' },\n                        { value: 'select-tree', label: '下拉树' },\n                        { value: 'checkbox', label: '复选框' },\n                        { value: 'checkbox-group', label: '复选框组' },\n                        { value: 'radio', label: '单选框' },\n                        { value: 'radio-group', label: '单选框组' },\n                        { value: 'radio-button', label: '单选按钮组' },\n                        { value: 'switch', label: '切换按钮' },\n                        { value: 'date', label: '日期选择框' },\n                        { value: 'time', label: '时间选择框' },\n                        { value: 'moth', label: '月份选择框' },\n                        { value: 'date-time', label: '日期+时间选择框' },\n                        { value: 'date-range', label: '日期区间选择框' },\n                        { value: 'cascader', label: '级联下拉框' },\n                        { value: 'transfer', label: '穿梭框' },\n                    ],\n                    onChange: (formType) => {\n                        record.formType = formType;\n                    },\n                };\n            },\n        },\n        {\n            title: '选项', dataIndex: 'operator', width: 170,\n            render: (value, record) => {\n                return renderFieldTags(record, () => this.setState({ table: { ...this.state.table } }));\n            },\n        },\n        {\n            title: '操作', dataIndex: 'operator', width: 40,\n            render: (value, record) => {\n                const { id, chinese } = record;\n                const items = [\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${chinese}\"?`,\n                            onConfirm: () => this.handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        const dbUrl = window.localStorage.getItem(DB_URL_STORE_KEY) || '';\n        const swaggerUrl = window.localStorage.getItem(SWAGGER_URL_STORE_KEY) || '';\n        this.form.setFieldsValue({ swaggerUrl });\n\n        if (dbUrl) {\n            this.form.setFieldsValue({ dbUrl });\n            // 初始化查询\n            this.handleDbUrlChange();\n        }\n    }\n\n    handleFocus = (e) => {\n        e.target.select();\n    };\n\n    handleKeyDown = (e, tabIndex) => {\n        const { keyCode, ctrlKey, shiftKey, altKey, metaKey } = e;\n\n        if (ctrlKey || shiftKey || altKey || metaKey) return;\n\n        const { table: { children } } = this.state;\n        const length = children?.length || 0;\n\n        const isUp = keyCode === 38;\n        const isRight = keyCode === 39;\n        const isDown = keyCode === 40;\n        const isLeft = keyCode === 37;\n        const isEnter = keyCode === 13;\n\n        let nextTabIndex;\n\n        if (isDown || isEnter) {\n            if (tabIndex === length || tabIndex === length * 2) {\n                nextTabIndex = undefined;\n            } else {\n                nextTabIndex = tabIndex + 1;\n            }\n        }\n\n        if (isUp) nextTabIndex = tabIndex - 1;\n\n        if (isLeft) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex - 1 <= 0 ? undefined : tabIndex - 1 + length;\n            } else {\n                nextTabIndex = tabIndex - length;\n            }\n        }\n\n        if (isRight) {\n            if (tabIndex <= length) {\n                nextTabIndex = tabIndex + length;\n            } else {\n                nextTabIndex = tabIndex - length === length ? undefined : tabIndex - length + 1;\n            }\n        }\n\n        const nextInput = document.querySelector(`input[tabindex='${nextTabIndex}']`);\n\n        if (nextInput) {\n            // 确保方向键也可以选中\n            setTimeout(() => {\n                nextInput.focus();\n                nextInput.select();\n            });\n        } else if (isEnter || isDown || isRight) {\n            // 新增一行\n            this.handleAdd(true);\n\n            // 等待新增行渲染完成，新增行 input 获取焦点\n            setTimeout(() => {\n                let ti = tabIndex;\n\n                if (isRight) ti = tabIndex - length;\n\n                if ((isDown || isEnter) && tabIndex === length * 2) ti = tabIndex + 1;\n\n                this.handleKeyDown({ keyCode: 13 }, ti);\n            });\n        }\n    };\n\n    handleTypeChange = (e) => {\n        const type = e.target.value;\n        if (type === 'mysql') {\n            this.handleDbUrlChange();\n        }\n        if (type === 'customer') {\n            this.handleModuleNameChange();\n        }\n        if (type === 'swagger') {\n            this.handleSwaggerChange();\n        }\n    };\n\n    handleDbUrlChange = (e) => {\n        const dbUrl = this.form.getFieldValue('dbUrl');\n        window.localStorage.setItem(DB_URL_STORE_KEY, dbUrl || '');\n\n        // 清空数据\n        this.setState({ tables: [], table: {} });\n        this.form.setFieldsValue({ tableName: undefined });\n\n        if (!dbUrl) return;\n\n        this.setState({ loading: true });\n        this.props.ajax.get('/gen/tables', { dbUrl }, { baseURL: '/' })\n            .then(res => {\n                const { dataSource } = getTables(res);\n                this.setState({ tables: dataSource }, () => {\n\n                    // 默认选中第一个表\n                    const tableName = dataSource[0]?.tableName;\n\n                    this.form.setFieldsValue({ tableName });\n                    this.handleTableNameChange(tableName);\n                });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleSwaggerChange = () => {\n        const swaggerUrl = this.form.getFieldValue('swaggerUrl');\n        window.localStorage.setItem(SWAGGER_URL_STORE_KEY, swaggerUrl);\n\n        // 清空数据\n        this.setState({ tables: [], table: {} });\n        this.form.setFieldsValue({ tableName: undefined });\n\n        if (!swaggerUrl) return;\n\n\n        const method = this.form.getFieldValue('method');\n        const userName = this.form.getFieldValue('userName');\n        const password = this.form.getFieldValue('password');\n        const params = {\n            swaggerUrl,\n            method,\n            userName,\n            password,\n        };\n\n        this.setState({ loading: true });\n        this.props.ajax.get('/gen/swagger', params, { baseURL: '/' })\n            .then(res => {\n                const { moduleName: tableName, queries, columns, forms } = res;\n\n                const children = [];\n                (queries || []).forEach(item => {\n                    const { type, field, label, required } = item;\n                    const chinese = getLabel(label);\n                    const formType = getFormElementType({ oType: type, label: chinese });\n\n                    children.push({\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: label,\n                        chinese,\n                        name: field,\n\n                        type,\n                        formType,\n                        length: 0,\n                        isNullable: !required,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isIgnore: false,\n                    });\n                });\n\n                (columns || []).forEach(item => {\n                    const { title, dataIndex } = item;\n                    if (!children.find(it => it.field === dataIndex)) {\n                        const formType = getFormElementType({ oType: 'input', label: title });\n                        children.push(\n                            {\n                                id: uuid(),\n                                tableName,\n                                field: dataIndex,\n                                comment: title,\n                                chinese: getLabel(title),\n                                name: dataIndex,\n\n                                type: 'string',\n                                formType,\n                                length: 0,\n                                isNullable: true,\n\n                                isColumn: true,\n                                isQuery: false,\n                                isForm: true,\n                                isIgnore: false,\n                            },\n                        );\n                    }\n                });\n\n                (forms || []).forEach(item => {\n                    const { type, field, label } = item;\n                    if (!children.find(it => it.field === field)) {\n                        const formType = getFormElementType({ oType: type, label: label });\n\n                        children.push({\n                            id: uuid(),\n                            tableName,\n                            field,\n                            comment: label,\n                            chinese: getLabel(label),\n                            name: field,\n\n                            type,\n                            formType,\n                            length: 0,\n                            isNullable: true,\n\n                            isColumn: true,\n                            isQuery: false,\n                            isForm: true,\n                            isIgnore: false,\n                        });\n                    }\n                });\n\n                const table = {\n                    id: tableName,\n                    isTable: true,\n                    tableName,\n                    comment: '',\n                    listPage: true,\n                    query: true,\n                    selectable: true,\n                    pagination: true,\n                    serialNumber: true,\n                    add: true,\n                    operatorEdit: true,\n                    operatorDelete: true,\n                    batchDelete: true,\n\n                    modalEdit: true,\n                    pageEdit: false,\n                    children,\n                };\n\n                this.setState({ table });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleModuleNameChange = () => {\n        // 清空数据\n        this.setState({ tables: [], table: {} });\n\n        const moduleName = this.form.getFieldValue('moduleName');\n        if (!moduleName) return;\n\n        const tableName = moduleName;\n        const field = 'name';\n        this.setState({\n            table: {\n                id: tableName,\n                isTable: true,\n                tableName,\n                comment: '',\n                listPage: true,\n                query: true,\n                selectable: true,\n                pagination: true,\n                serialNumber: true,\n                add: true,\n                operatorEdit: true,\n                operatorDelete: true,\n                batchDelete: true,\n\n                modalEdit: true,\n                pageEdit: false,\n                children: [\n                    {\n                        id: uuid(),\n                        tableName,\n                        field,\n                        comment: '用户名',\n                        chinese: '用户名',\n                        name: field,\n\n                        type: 'string',\n                        formType: 'input',\n                        length: 0,\n                        isNullable: true,\n\n                        isColumn: true,\n                        isQuery: true,\n                        isForm: true,\n                        isIgnore: false,\n                    },\n                ],\n            },\n        });\n\n    };\n\n    handleDelete = (id) => {\n        const { table } = this.state;\n        const { children } = table;\n        table.children = children.filter(item => item.id !== id);\n        this.setState({ table: { ...table } });\n    };\n\n    handleTableNameChange = (tableName) => {\n        const { tables } = this.state;\n        const table = tables.find(item => item.tableName === tableName);\n        this.setState({ table });\n    };\n\n    handleAdd = (append) => {\n        const { table } = this.state;\n        if (!table.children) table.children = [];\n        const length = table.children.length;\n        const { tableName, children } = table;\n        const field = `field${length + 1}`;\n        const id = uuid();\n\n        const newRecord = {\n            id,\n            tableName,\n            field,\n            comment: '新增列',\n            chinese: '新增列',\n            name: field,\n\n            type: 'string',\n            formType: 'input',\n            length: 0,\n            isNullable: true,\n\n            isColumn: true,\n            isQuery: false,\n            isForm: true,\n            isIgnore: false,\n        };\n\n        append ? children.push(newRecord) : children.unshift(newRecord);\n        table.children = [ ...children ];\n        this.setState({ table: { ...table } });\n    };\n\n    /** 获取参数 */\n    getParams = async (showTip) => {\n        await this.form.validateFields();\n\n        if (!this.state.table?.children?.length) {\n            Modal.error({\n                icon: <ExclamationCircleOutlined/>,\n                title: '温馨提示',\n                content: '字段配置为空，无法生成，请添加字段信息！',\n            });\n\n            return Promise.reject();\n        }\n\n        return new Promise((resolve, reject) => {\n            const getParams = () => {\n                const { table } = this.state;\n                const children = table.children\n                    .map(it => ({\n                        field: it.field,\n                        chinese: getLabel(it.chinese),\n                        name: it.name,\n                        type: it.type,\n                        formType: it.formType || 'input',\n                        length: isInputLikeElement(it.formType || 'input') ? it.length : 0,\n                        isNullable: it.isNullable,\n                        isForm: it.isForm,\n                        isColumn: it.isColumn,\n                        isQuery: it.isQuery,\n                    }));\n\n                const params = {\n                    tables: [ {\n                        ...table,\n                        children,\n                    } ],\n                };\n\n                resolve(params);\n            };\n\n            if (!showTip) {\n                getParams();\n                return;\n            }\n\n            Modal.confirm({\n                icon: <ExclamationCircleOutlined/>,\n                title: '同名文件将被覆盖，是否继续？',\n                content: '代码文件直接生成到项目目录中，会引起webpack的热更新，当前页面有可能会重新加载。',\n                onOk: () => {\n                    getParams();\n                },\n                onCancel: () => {\n                    reject();\n                },\n            });\n        });\n    };\n\n    handleGen = async () => {\n        const params = await this.getParams(true);\n\n        this.setState({ loading: true });\n        this.props.ajax.post('/gen/tables', params, { baseURL: '/', successTip: '生成成功！' })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handlePreview = async () => {\n        const params = await this.getParams();\n\n        this.setState({ loading: true });\n        this.props.ajax.post('/gen/preview', params, { baseURL: '/' })\n            .then(res => {\n                this.setState({ previewVisible: true, previewCode: res });\n            })\n            .finally(() => this.setState({ loading: false }));\n    };\n\n    handleSortEnd = ({ newIndex, oldIndex }) => {\n        const { table = {} } = this.state;\n        const { children = [] } = table;\n\n        children.splice(newIndex, 0, ...children.splice(oldIndex, 1));\n        table.children = [ ...children ];\n\n        this.setState({ table: { ...table } });\n    };\n\n    handleFastEdit = () => {\n        const { fastEdit, table } = this.state;\n        const nextVisible = !fastEdit;\n        this.setState({ fastEdit: nextVisible });\n\n        if (!nextVisible) {\n            const value = document.getElementById('fastTextArea').value;\n            if (!value) {\n                this.setState({ table: { ...table, children: [] } });\n                return;\n            }\n\n            const rows = value.split('\\n');\n            const children = [];\n            rows.forEach((item, index) => {\n                let str = item.trim();\n                // 多个空格 替换成一个\n                str = str.replace(/\\s+/g, ' ');\n\n                if (!str) return;\n                let isColumn = str.includes('isColumn');\n                let isForm = str.includes('isForm');\n                let isQuery = str.includes('isQuery');\n\n                str = str.replace('isColumn', '');\n                str = str.replace('isForm', '');\n                str = str.replace('isQuery', '');\n\n                str = str.replace(/\\s+/g, ' ');\n\n                if (!str) return;\n\n                let [ chinese, field, formType ] = str.split(' ');\n                if (!formType) formType = getFormElementType({ label: chinese });\n                if (!field) field = getFormElementName({ label: chinese, fields: children.map(item => item.field) });\n\n\n                if (!isColumn && !isForm && !isQuery) {\n                    isColumn = true;\n                    isForm = true;\n                }\n\n                children.push({\n                    id: field,\n                    comment: chinese,\n                    chinese,\n                    field,\n                    formType,\n                    isColumn,\n                    isForm,\n                    isQuery,\n                });\n\n            });\n\n            this.setState({ table: { ...table, children } });\n        }\n    };\n\n    render() {\n        const {\n            loading,\n            deleting,\n            tables,\n            table,\n            previewVisible,\n            previewCode,\n            fastEdit,\n        } = this.state;\n\n        const formProps = {\n            style: { paddingLeft: 16 },\n        };\n\n        return (\n            <PageContent loading={loading || deleting} style={{ padding: 0, margin: 0 }}>\n                <QueryBar>\n                    <Form ref={form => this.form = form} initialValues={{ type: 'mysql', method: 'get', userName: 'admin', password: '123456' }}>\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                width={240}\n                                type=\"radio-button\"\n                                name=\"type\"\n                                options={[\n                                    { value: 'swagger', label: 'Swagger' },\n                                    { value: 'mysql', label: 'MySql' },\n                                    { value: 'customer', label: '自定义' },\n                                ]}\n                                onChange={this.handleTypeChange}\n                            />\n                            <Form.Item style={{ marginBottom: 0 }} shouldUpdate={(prevValues, currValues) => prevValues.type !== currValues.type}>\n                                {({ getFieldValue }) => {\n                                    const type = getFieldValue('type');\n                                    if (type === 'mysql') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={500}\n                                                    label=\"数据库地址\"\n                                                    name=\"dbUrl\"\n                                                    placeholder=\"mysql://username:password@host:port/database\"\n                                                    onChange={this.handleDbUrlChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    elementStyle={{ width: 200 }}\n                                                    type=\"select\"\n                                                    showSearch\n                                                    label=\"数据库表\"\n                                                    name=\"tableName\"\n                                                    onChange={this.handleTableNameChange}\n                                                    options={tables.map(item => ({ value: item.tableName, label: `${item.tableName} ${item.comment}` }))}\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n                                    if (type === 'swagger') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={400}\n                                                    label=\"接口地址\"\n                                                    name=\"swaggerUrl\"\n                                                    placeholder=\"http(s)://host:port/path\"\n                                                    onChange={this.handleSwaggerChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    type=\"select\"\n                                                    width={100}\n                                                    placeholder=\"接口方法\"\n                                                    name=\"method\"\n                                                    options={[\n                                                        { value: 'get', label: 'GET' },\n                                                        { value: 'post', label: 'POST' },\n                                                        { value: 'put', label: 'PUT' },\n                                                    ]}\n                                                    onChange={this.handleSwaggerChange}\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={120}\n                                                    placeholder=\"Swagger用户\"\n                                                    name=\"userName\"\n                                                />\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={120}\n                                                    placeholder=\"Swagger密码\"\n                                                    name=\"password\"\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n\n                                    if (type === 'customer') {\n                                        return (\n                                            <FormRow>\n                                                <FormElement\n                                                    {...formProps}\n                                                    width={300}\n                                                    label=\"模块名\"\n                                                    name=\"moduleName\"\n                                                    placeholder=\"比如：user-center\"\n                                                    rules={[ { required: true, message: '请输入模块名！' } ]}\n                                                    onChange={this.handleModuleNameChange}\n                                                />\n                                            </FormRow>\n                                        );\n                                    }\n                                }}\n                            </Form.Item>\n                        </FormRow>\n                    </Form>\n                </QueryBar>\n                <div style={{ marginBottom: 8, display: 'flex', justifyContent: 'space-between' }}>\n                    <div>\n                        <Button disabled={fastEdit} type=\"primary\" onClick={() => this.handleAdd()}>添加</Button>\n                        <Button disabled={fastEdit} style={{ margin: '0 8px' }} type=\"primary\" onClick={this.handleGen}>生成文件</Button>\n                        <Button disabled={fastEdit} onClick={this.handlePreview}>代码预览</Button>\n                        <Button type=\"primary\" style={{ margin: '0 8px' }} onClick={this.handleFastEdit}>{fastEdit ? '表格编辑' : '快速编辑'}</Button>\n                    </div>\n                    <div style={{ paddingRight: 23, paddingTop: 3 }}>\n                        {renderTags(table, () => this.setState({ table: { ...table } }))}\n                    </div>\n                </div>\n                <div style={{ position: 'relative', height: 'calc(100vh - 230px)' }}>\n\n                    {this.state.fastEdit ? (\n                        <Input.TextArea\n                            id=\"fastTextArea\"\n                            style={{\n                                position: 'absolute',\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                left: 0,\n                            }}\n                            defaultValue={table?.children?.map(item => `${item.chinese || ''} ${item.field || ''} ${item.formType || ''} ${[ 'isColumn', 'isForm', 'isQuery' ].map(key => item[key] ? key : '').join(' ')}`).join('\\n')}\n                        />\n                    ) : (\n                        <EditTable\n                            onSortEnd={this.handleSortEnd}\n                            serialNumber\n                            columns={this.columns}\n                            dataSource={table?.children}\n                            rowKey=\"id\"\n                        />\n                    )}\n                </div>\n                <PreviewModal\n                    visible={previewVisible}\n                    previewCode={previewCode}\n                    onOk={() => this.setState({ previewVisible: false })}\n                    onCancel={() => this.setState({ previewVisible: false })}\n                />\n            </PageContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Tabs} from 'antd';\nimport config from 'src/commons/config-hoc';\nimport { PageContent } from 'ra-lib';\nimport Fast from './Fast';\nimport Single from './Single';\nimport './style.less';\n\nconst {TabPane} = Tabs;\n\n@config({\n    title: '代码生成',\n    side: false,\n    path: '/gen',\n})\nexport default class index extends Component {\n    render() {\n        return (\n            <PageContent styleName=\"root\">\n                <Tabs defaultActiveKey=\"single\">\n                    <TabPane key=\"fast\" tab=\"快速生成\">\n                        <Fast/>\n                    </TabPane>\n                    <TabPane key=\"single\" tab=\"单独生成\">\n                        <Single/>\n                    </TabPane>\n                </Tabs>\n            </PageContent>\n        );\n    }\n}\n","module.exports = (__webpack_require__(5))(59);","module.exports = (__webpack_require__(5))(197);","module.exports = (__webpack_require__(5))(368);","module.exports = (__webpack_require__(5))(697);"],"sourceRoot":""}