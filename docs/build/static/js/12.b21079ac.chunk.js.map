{"version":3,"sources":["pages/examples/table-editable/index.jsx"],"names":["EditTable","tableEditable","Table","EditableTable","config","path","state","dataSource","Array","from","length","map","item","index","key","name","lang","address","columns","title","dataIndex","width","formProps","required","type","options","label","value","record","includes","disabled","render","text","items","onClick","_form","validateFields","then","values","console","log","catch","e","resetFields","this","Component"],"mappings":"0OAKMA,EAAYC,YAAcC,KAGXC,EADpBC,YAAO,CAACC,KAAM,2B,+MAEXC,MAAQ,CACJC,WAAYC,MAAMC,KAAK,CAACC,OAAQ,KAAKC,KAAI,SAACC,EAAMC,GAC5C,MAAO,CACHC,IAAI,GAAD,OAAKD,GACRE,KAAM,gBACNC,KAAM,MACNC,QAAS,+B,EAKrBC,QAAU,CACN,CACIC,MAAO,eACPC,UAAW,OACXC,MAAO,IACPC,UAAW,CACPC,UAAU,IAGlB,CACIJ,MAAO,eACPC,UAAW,OACXC,MAAO,IACPC,UAAW,CACPE,KAAM,SACND,UAAU,EACVE,QAAS,CACL,CAACC,MAAO,OAAQC,MAAO,QACvB,CAACD,MAAO,MAAOC,MAAO,UAIlC,CACIR,MAAO,eACPC,UAAW,UACXE,UAAW,SAAAM,GAEP,OADkBA,EAAXX,QACKY,SAAS,SAAiB,GAE/B,CACHC,UAAU,KAItB,CACIX,MAAO,eACPC,UAAW,YACXC,MAAO,IACPU,OAAQ,SAACC,EAAMJ,GACX,OACI,kBAAC,IAAD,CACIK,MAAO,CACH,CACIP,MAAO,eACPQ,QAAS,WACLN,EAAOO,MAAMC,iBACRC,MAAK,SAAAC,GACFC,QAAQC,IAAI,iCAASF,MAExBG,OAAM,SAAAC,GACHH,QAAQC,IAAIE,QAI5B,CACIhB,MAAO,eACPQ,QAAS,kBAAMN,EAAOO,MAAMQ,sB,uDAW9C,IACCpC,EAAcqC,KAAKtC,MAAnBC,WAGP,OADAgC,QAAQC,IAAI,UAER,kBAAC,IAAD,KACI,kBAACxC,EAAD,CACIO,WAAYA,EACZW,QAAS0B,KAAK1B,e,GAvFS2B,e","file":"static/js/12.b21079ac.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport config from 'src/commons/config-hoc';\nimport {tableEditable, Operator, Table} from 'ra-lib';\nimport { PageContent } from 'ra-lib';\n\nconst EditTable = tableEditable(Table);\n\n@config({path: '/example/table-editable'})\nexport default class EditableTable extends Component {\n    state = {\n        dataSource: Array.from({length: 20}).map((item, index) => {\n            return {\n                key: `${index}`,\n                name: 'Edward King 1',\n                lang: 'c++',\n                address: 'London, Park Lane no. 1',\n            };\n        }),\n    };\n\n    columns = [\n        {\n            title: '姓名',\n            dataIndex: 'name',\n            width: 300,\n            formProps: {\n                required: true,\n            },\n        },\n        {\n            title: '语言',\n            dataIndex: 'lang',\n            width: 300,\n            formProps: {\n                type: 'select',\n                required: true,\n                options: [\n                    {label: 'Java', value: 'java'},\n                    {label: 'C++', value: 'c++'},\n                ],\n            },\n        },\n        {\n            title: '地址',\n            dataIndex: 'address',\n            formProps: record => {\n                const {address} = record;\n                if (address.includes('no. 0')) return {};\n\n                return {\n                    disabled: true,\n                };\n            },\n        },\n        {\n            title: '操作',\n            dataIndex: 'operation',\n            width: 100,\n            render: (text, record) => {\n                return (\n                    <Operator\n                        items={[\n                            {\n                                label: '保存',\n                                onClick: () => {\n                                    record._form.validateFields()\n                                        .then(values => {\n                                            console.log('校验成功：', values);\n                                        })\n                                        .catch(e => {\n                                            console.log(e);\n                                        });\n                                },\n                            },\n                            {\n                                label: '重置',\n                                onClick: () => record._form.resetFields(),\n                            },\n\n                        ]}\n                    />\n                );\n            },\n        },\n    ];\n\n\n    render() {\n        const {dataSource} = this.state;\n\n        console.log('123123');\n        return (\n            <PageContent>\n                <EditTable\n                    dataSource={dataSource}\n                    columns={this.columns}\n                />\n            </PageContent>\n        );\n    }\n}\n"],"sourceRoot":""}