{"version":3,"sources":["pages/users/EditModalHooks.jsx","pages/users/UserListHooks.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../delegated 653 from dll-reference reactVendor_45666092243205e01b0c","components/batch-delete-confirm/index.jsx"],"names":["config","modal","props","isEdit","useState","data","setData","id","onOk","useForm","form","useGet","loading","fetchUser","usePost","successTip","saving","saveUser","usePut","updating","updateUser","a","console","log","res","setFieldsValue","values","ajaxMethod","useEffect","fetchData","formProps","labelWidth","modalLoading","okText","cancelText","submit","onCancel","resetFields","onFinish","initialValues","type","name","label","required","noSpace","options","value","mode","showSearch","optionFilterProp","path","title","pageNum","setPageNum","pageSize","setPageSize","dataSource","setDataSource","selectedRowKeys","setSelectedRowKeys","total","setTotal","visible","setVisible","setId","fetchUsers","api","deleteUsers","deleting","useDel","errorTip","deletingOne","deleteUser","columns","dataIndex","width","render","record","items","onClick","color","confirm","onConfirm","handleDelete","handleSearch","getFieldsValue","params","list","batchDeleteConfirm","length","ids","pageLoading","disabledDelete","allowClear","onChange","layout","htmlType","danger","disabled","rowSelection","rowKey","serialNumber","onPageNumChange","onPageSizeChange","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","__webpack_require__","count","content","style","padding","fontSize","icon","okType"],"mappings":"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","file":"static/js/8.f7c0e9a6.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\nimport {useGet, usePost, usePut} from 'src/commons/ajax';\n\nexport default config({\n    modal: props => props.isEdit ? '修改用户' : '添加用户',\n})(props => {\n    const [data, setData] = useState({});\n    const {isEdit, id, onOk} = props;\n    const [form] = Form.useForm();\n    const [loading, fetchUser] = useGet('/mock/users/:id');\n    const [saving, saveUser] = usePost('/mock/users', {successTip: '添加成功！'});\n    const [updating, updateUser] = usePut('/mock/users', {successTip: '添加成功！'});\n\n    async function fetchData() {\n        if (loading) return;\n        console.log(id);\n\n        const res = await fetchUser(id);\n\n        setData(res || {});\n        form.setFieldsValue(res || {});\n    }\n\n    async function handleSubmit(values) {\n        if (saving || updating) return;\n\n        const ajaxMethod = isEdit ? updateUser : saveUser;\n        await ajaxMethod(values);\n\n        onOk && onOk();\n    }\n\n    useEffect(() => {\n        if (isEdit) fetchData();\n    }, []);\n\n    const formProps = {\n        labelWidth: 100,\n    };\n    const modalLoading = loading || saving || updating;\n    return (\n        <ModalContent\n            loading={modalLoading}\n            okText=\"保存\"\n            cancelText=\"重置\"\n            onOk={() => form.submit()}\n            onCancel={() => form.resetFields()}\n        >\n            <Form\n                form={form}\n                onFinish={handleSubmit}\n                initialValues={data}\n            >\n                {isEdit ? <FormElement {...formProps} type=\"hidden\" name=\"id\"/> : null}\n\n                <FormElement\n                    {...formProps}\n                    label=\"用户名\"\n                    name=\"name\"\n                    required\n                    noSpace\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"number\"\n                    label=\"年龄\"\n                    name=\"age\"\n                    required\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"select\"\n                    label=\"工作\"\n                    name=\"job\"\n                    options={[\n                        {value: '1', label: '前端开发'},\n                        {value: '2', label: '后端开发'},\n                    ]}\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"select\"\n                    label=\"职位\"\n                    name=\"position\"\n                    options={[\n                        {value: '1', label: '员工'},\n                        {value: '2', label: 'CEO'},\n                    ]}\n                />\n                <FormElement\n                    {...formProps}\n                    type=\"select\"\n                    mode=\"multiple\"\n                    showSearch\n                    optionFilterProp='children'\n                    label=\"角色\"\n                    name=\"role\"\n                    options={[\n                        {value: '1', label: '员工'},\n                        {value: '2', label: 'CEO'},\n                    ]}\n                />\n            </Form>\n        </ModalContent>\n    );\n});\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Button, Form } from 'antd';\n\nimport PageContent from 'src/layouts/page-content';\nimport config from 'src/commons/config-hoc';\nimport batchDeleteConfirm from 'src/components/batch-delete-confirm';\nimport { useGet, useDel } from 'src/commons/ajax';\nimport api from './useApi';\nimport {\n    FormElement,\n    FormRow,\n    Operator,\n    Pagination,\n    QueryBar,\n    Table,\n} from 'src/library/components';\n\nimport EditModal from './EditModalHooks';\n\nexport default config({\n    path: '/hook/users',\n    title: '用户管理(Hooks)',\n})(() => {\n    // 数据定义\n    const [ pageNum, setPageNum ] = useState(1);\n    const [ pageSize, setPageSize ] = useState(20);\n    const [ dataSource, setDataSource ] = useState([]);\n    const [ selectedRowKeys, setSelectedRowKeys ] = useState([]);\n    const [ total, setTotal ] = useState(0);\n    const [ visible, setVisible ] = useState(false);\n    const [ id, setId ] = useState(null);\n    const [ form ] = Form.useForm();\n\n    // 请求相关定义 只是定义，不会触发请求，调用相关函数，才会触发请求\n    const [ loading, fetchUsers ] = useGet('/mock/users');\n    const [ deleting, deleteUsers ] = api.deleteUsers(); // 可以单独封装成api\n    const [ deletingOne, deleteUser ] = useDel('/mock/users/:id', { successTip: '删除成功！', errorTip: '删除失败！' });\n\n    const columns = [\n        { title: '用户名', dataIndex: 'name', width: 200 },\n        { title: '年龄', dataIndex: 'age', width: 200 },\n        { title: '工作', dataIndex: 'job', width: 200 },\n        { title: '职位', dataIndex: 'position', width: 200 },\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const { id, name } = record;\n                const items = [\n                    {\n                        label: '编辑',\n                        onClick: () => setVisible(true) || setId(id),\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: () => handleDelete(id),\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    // 函数定义\n    async function handleSearch(options = {}) {\n        if (loading) return;\n\n        // 获取表单数据\n        const values = form.getFieldsValue();\n        const params = {\n            ...values,\n        };\n\n        // 翻页信息优先从参数中获取\n        params.pageNum = options.pageNum || pageNum;\n        params.pageSize = options.pageSize || pageSize;\n\n        console.log('params:', params);\n        const res = await fetchUsers(params);\n        console.log('res:', res);\n\n        setDataSource(res?.list || []);\n        setTotal(res?.total || 0);\n        setPageNum(params.pageNum);\n        setPageSize(params.pageSize);\n    }\n\n    async function handleDelete(id) {\n        if (deletingOne) return;\n\n        await deleteUser(id);\n        await handleSearch();\n    }\n\n    async function handleBatchDelete() {\n        if (deleting) return;\n\n        await batchDeleteConfirm(selectedRowKeys.length);\n\n        await deleteUsers({ ids: selectedRowKeys });\n        setSelectedRowKeys([]);\n        await handleSearch();\n    }\n\n    // 组件初始化完成之后，进行一次查询\n    useEffect(() => {\n        handleSearch();\n    }, []);\n\n    // jsx 用到的数据\n    const formProps = { width: 200 };\n    const pageLoading = loading || deleting || deletingOne;\n    const disabledDelete = !selectedRowKeys?.length || pageLoading;\n\n\n    console.log('render');\n    return (\n        <PageContent loading={pageLoading}>\n            <QueryBar>\n                <Form form={form} onFinish={() => handleSearch({ pageNum: 1 })}>\n                    <FormRow>\n                        <FormElement\n                            {...formProps}\n                            label=\"名称\"\n                            name=\"name\"\n                        />\n                        <FormElement\n                            {...formProps}\n                            allowClear\n                            type=\"select\"\n                            label=\"职位\"\n                            name=\"job\"\n                            onChange={() => handleSearch({ pageNum: 1 })}\n                            options={[\n                                { value: 1, label: 1 },\n                                { value: 2, label: 2 },\n                            ]}\n                        />\n                        <FormElement layout>\n                            <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n                            <Button onClick={() => form.resetFields()}>重置</Button>\n                            <Button type=\"primary\" onClick={() => setVisible(true) || setId(null)}>添加</Button>\n                            <Button danger disabled={disabledDelete} onClick={handleBatchDelete}>删除</Button>\n                        </FormElement>\n                    </FormRow>\n                </Form>\n            </QueryBar>\n            <Table\n                rowSelection={{\n                    selectedRowKeys,\n                    onChange: setSelectedRowKeys,\n                }}\n                columns={columns}\n                dataSource={dataSource}\n                rowKey=\"id\"\n                serialNumber\n                pageNum={pageNum}\n                pageSize={pageSize}\n            />\n            <Pagination\n                total={total}\n                pageNum={pageNum}\n                pageSize={pageSize}\n                onPageNumChange={pageNum => handleSearch({ pageNum })}\n                onPageSizeChange={pageSize => handleSearch({ pageNum: 1, pageSize })}\n            />\n            <EditModal\n                visible={visible}\n                id={id}\n                isEdit={id !== null}\n                onOk={() => setVisible(false) || handleSearch({ pageNum: 1 })}\n                onCancel={() => setVisible(false)}\n            />\n        </PageContent>\n    );\n});\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","module.exports = (__webpack_require__(6))(653);","import React from 'react';\nimport {Modal} from 'antd';\nimport {ExclamationCircleOutlined} from '@ant-design/icons';\n\nexport default function batchDeleteConfirm(count) {\n    const content = (\n        <div>\n            您确定删除\n            <span style={{padding: '0 5px', color: 'red', fontSize: 18}}>\n                {count}\n            </span>\n            条记录吗？\n        </div>\n    );\n    return new Promise((resolve, reject) => {\n        Modal.confirm({\n            title: '温馨提示',\n            content,\n            icon: <ExclamationCircleOutlined/>,\n            okType: 'danger',\n            onOk: () => resolve(true),\n            onCancel: () => reject('user cancel confirm'),\n        });\n    });\n}\n"],"sourceRoot":""}