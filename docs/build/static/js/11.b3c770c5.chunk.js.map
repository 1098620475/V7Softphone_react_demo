{"version":3,"sources":["pages/menu-permission/MenuSelect.jsx","pages/role/EditModal.jsx","pages/role/index.jsx","pages/role/style.less"],"names":["index","config","ajax","state","loading","menus","allMenuKeys","expandedRowKeys","columns","title","dataIndex","key","render","value","record","icon","type","url","handleSelect","selected","selectedRows","nativeEvent","props","allKeys","childrenKeys","getGenerationKeys","parentKeys","concat","filter","item","includes","reverse","forEach","pk","some","ck","push","onChange","Array","from","Set","handleSelectAll","indeterminate","k","every","this","handleSearch","setState","get","then","res","map","id","parentKey","parentId","orderedData","sort","a","b","aOrder","order","bOrder","text","menuTreeData","convertToTree","finally","others","expandable","onExpandedRowsChange","rowSelection","selectedRowKeys","onSelect","onSelectAll","getCheckboxProps","dataSource","pagination","Component","EditModal","modal","isEdit","data","fetchData","form","setFieldsValue","handleSubmit","values","successTip","ajaxMethod","put","post","onOk","formProps","labelWidth","okText","cancelText","submit","onCancel","resetFields","ref","onFinish","initialValues","name","label","required","UserCenter","path","deleting","visible","loadingRoleMenu","selectedKeys","selectedRoleId","undefined","width","items","onClick","e","stopPropagation","color","confirm","onConfirm","handleDelete","params","handleRowClick","del","errorTip","roleId","handleSaveRoleMenu","ids","style","paddingLeft","selectedRoleName","find","layout","htmlType","disabled","span","rowClassName","serialNumber","rowKey","onRow","module","exports"],"mappings":"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","file":"static/js/11.b3c770c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport { convertToTree, getGenerationKeys } from 'src/library/utils/tree-utils';\nimport { Table } from 'src/library/components';\nimport './style.less';\n\n@config({\n    ajax: true,\n})\nexport default class index extends Component {\n    static propTypes = {\n        value: PropTypes.array,     // 选中的节点\n        onChange: PropTypes.func,   // 选择节点时，触发\n    };\n\n    state = {\n        loading: false,\n        menus: [],\n        allMenuKeys: [],\n        expandedRowKeys: [],\n    };\n\n    columns = [\n        {\n            title: '名称', dataIndex: 'text', key: 'text',\n            render: (value, record) => {\n                const { icon } = record;\n\n                if (icon) return <span><Icon type={icon}/> {value}</span>;\n\n                return value;\n            },\n        },\n        {\n            title: '类型', dataIndex: 'type', key: 'type',\n            render: (value, record) => {\n                const { url } = record;\n                if (url) return '站外菜单';\n                if (value === '1') return '站内菜单';\n                if (value === '2') return '功能';\n\n                return '菜单';\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSearch();\n    }\n\n    handleSearch() {\n        this.setState({ loading: true });\n        this.props.ajax\n            .get('/menus')\n            .then(res => {\n                const menus = res.map(item => ({ key: item.id, parentKey: item.parentId, ...item }));\n                const allMenuKeys = menus.map(item => item.key);\n                // 菜单根据order 排序\n                const orderedData = [ ...menus ].sort((a, b) => {\n                    const aOrder = a.order || 0;\n                    const bOrder = b.order || 0;\n\n                    // 如果order都不存在，根据 text 排序\n                    if (!aOrder && !bOrder) {\n                        return a.text > b.text ? 1 : -1;\n                    }\n\n                    return bOrder - aOrder;\n                });\n\n                const menuTreeData = convertToTree(orderedData);\n\n                // 默认展开全部\n                const expandedRowKeys = menus.map(item => item.key);\n                this.setState({ menus: menuTreeData, allMenuKeys, expandedRowKeys });\n            })\n            .finally(() => this.setState({ loading: false }));\n\n    }\n\n\n    handleSelect = (record, selected, selectedRows, nativeEvent) => {\n        const { value = [] } = this.props;\n        const { menus } = this.state;\n\n        const { key } = record;\n\n        let allKeys = [ ...value ];\n\n        // 全选 取消 子级\n        const childrenKeys = getGenerationKeys(menus, key);\n        const { parentKeys = [] } = record;\n        if (selected) {\n            // 子级全部加入\n            allKeys = allKeys.concat(key, ...childrenKeys);\n\n            // 父级状态 全部加入\n            allKeys = allKeys.concat(...parentKeys);\n        } else {\n            // 子级全部删除\n            allKeys = allKeys.filter(item => !(([ key, ...childrenKeys ]).includes(item)));\n\n            // 判断父级状态 只要有后代选中就加入\n            parentKeys.reverse().forEach(pk => {\n                const cKs = getGenerationKeys(menus, pk);\n                const hasChildSelected = cKs.some(ck => allKeys.includes(ck));\n\n                if (hasChildSelected) {\n                    allKeys.push(pk);\n                } else {\n                    allKeys = allKeys.filter(item => item !== pk);\n                }\n            });\n        }\n\n        const { onChange } = this.props;\n\n        onChange && onChange(Array.from(new Set(allKeys)));\n    };\n\n    handleSelectAll = (selected) => {\n        const { allMenuKeys } = this.state;\n        const { onChange } = this.props;\n\n        onChange && onChange(selected ? allMenuKeys : []);\n    };\n\n    indeterminate = (record) => {\n        const { value } = this.props;\n        const { menus } = this.state;\n        const { key } = record;\n        // 如果 部分子级被选中，就是半选\n        const childrenKeys = getGenerationKeys(menus, key);\n        return value.includes(key) && value.some(k => childrenKeys.includes(k)) && !childrenKeys.every(k => value.includes(k));\n    };\n\n    render() {\n        const {\n            menus,\n            loading,\n            expandedRowKeys,\n        } = this.state;\n\n        const { value, onChange, ...others } = this.props;\n\n        return (\n            <Table\n                expandable={{\n                    expandedRowKeys: expandedRowKeys,\n                    onExpandedRowsChange: expandedRowKeys => this.setState({ expandedRowKeys }),\n                }}\n                rowSelection={{\n                    selectedRowKeys: value,\n                    onSelect: this.handleSelect,\n                    onSelectAll: this.handleSelectAll,\n                    getCheckboxProps: record => {\n                        const indeterminate = this.indeterminate(record);\n                        return { indeterminate };\n                    },\n                }}\n                loading={loading}\n                columns={this.columns}\n                dataSource={menus}\n                pagination={false}\n                {...others}\n            />\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport {Form} from 'antd';\nimport {FormElement} from 'src/library/components';\nimport config from 'src/commons/config-hoc';\nimport {ModalContent} from 'src/library/components';\n\n@config({\n    ajax: true,\n    modal: {\n        title: props => props.isEdit ? '修改' : '添加',\n    },\n})\nexport default class EditModal extends Component {\n    state = {\n        loading: false,     // 页面加载loading\n        data: {},           // 回显的角色数据\n    };\n\n    componentDidMount() {\n        const {isEdit} = this.props;\n\n        if (isEdit) {\n            this.fetchData();\n        }\n    }\n\n    fetchData = () => {\n        if (this.state.loading) return;\n\n        const {id} = this.props;\n\n        this.setState({loading: true});\n        this.props.ajax.get(`/mock/roles/${id}`)\n            .then(res => {\n                this.setState({data: res || {}});\n                this.form.setFieldsValue(res);\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n\n        const {isEdit} = this.props;\n        const successTip = isEdit ? '修改成功！' : '添加成功！';\n        const ajaxMethod = isEdit ? this.props.ajax.put : this.props.ajax.post;\n        const ajaxUrl = isEdit ? '/role' : '/role';\n\n        this.setState({loading: true});\n        ajaxMethod(ajaxUrl, values, {successTip})\n            .then(() => {\n                const {onOk} = this.props;\n                onOk && onOk();\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    render() {\n        const {isEdit} = this.props;\n        const {loading, data} = this.state;\n        const formProps = {\n            labelWidth: 100,\n        };\n        return (\n            <ModalContent\n                loading={loading}\n                okText=\"保存\"\n                cancelText=\"重置\"\n                onOk={() => this.form.submit()}\n                onCancel={() => this.form.resetFields()}\n            >\n                <Form\n                    ref={form => this.form = form}\n                    onFinish={this.handleSubmit}\n                    initialValues={data}\n                >\n                    {isEdit ? <FormElement {...formProps} type=\"hidden\" name=\"id\"/> : null}\n                    <FormElement\n                        {...formProps}\n                        label=\"角色名称\"\n                        name=\"name\"\n                        required\n                    />\n                    <FormElement\n                        {...formProps}\n                        label=\"描述\"\n                        name=\"description\"\n                    />\n                </Form>\n            </ModalContent>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Button, Form, Row, Col} from 'antd';\nimport PageContent from 'src/layouts/page-content';\nimport config from 'src/commons/config-hoc';\nimport MenuSelect from 'src/pages/menu-permission/MenuSelect';\nimport {\n    QueryBar,\n    FormRow,\n    FormElement,\n    Table,\n    Operator,\n} from 'src/library/components';\nimport EditModal from './EditModal';\nimport './style.less';\n\n@config({\n    path: '/roles',\n    ajax: true,\n})\nexport default class UserCenter extends Component {\n    state = {\n        loading: false,     // 表格加载数据loading\n        dataSource: [],     // 表格数据\n        deleting: false,    // 删除中loading\n        visible: false,     // 添加、修改弹框\n        id: null,           // 需要修改的数据id\n        loadingRoleMenu: false, // 查询角色权限 loading标识\n        selectedKeys: [],   // 角色对应的菜单\n        selectedRoleId: undefined, // 当前选中角色\n    };\n\n    columns = [\n        {title: '角色名称', dataIndex: 'name', width: 150},\n        {title: '描述', dataIndex: 'description'},\n        {\n            title: '操作', dataIndex: 'operator', width: 100,\n            render: (value, record) => {\n                const {id, name} = record;\n                const items = [\n                    {\n                        label: '修改',\n                        onClick: (e) => {\n                            e.stopPropagation();\n                            this.setState({visible: true, id});\n                        },\n                    },\n                    {\n                        label: '删除',\n                        color: 'red',\n                        confirm: {\n                            title: `您确定删除\"${name}\"?`,\n                            onConfirm: (e) => {\n                                e.stopPropagation();\n                                this.handleDelete(id);\n                            },\n                        },\n                    },\n                ];\n\n                return <Operator items={items}/>;\n            },\n        },\n    ];\n\n    componentDidMount() {\n        this.handleSubmit();\n    }\n\n    handleSubmit = (values) => {\n        if (this.state.loading) return;\n        const params = {\n            ...values,\n        };\n\n        // 一般系统中，角色不会太多，不做分页查询了\n        this.setState({loading: true});\n        this.props.ajax.get('/mock/role', params)\n            .then(res => {\n                const dataSource = res || [];\n\n                this.setState({dataSource});\n\n                // 查询之后，默认选中第一个角色\n                if (dataSource[0]) this.handleRowClick(dataSource[0]);\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    handleDelete = (id) => {\n        if (this.state.deleting) return;\n\n        this.setState({deleting: true});\n        this.props.ajax.del(`/mock/roles/${id}`, null, {successTip: '删除成功！', errorTip: '删除失败！'})\n            .then(() => this.form.submit())\n            .finally(() => this.setState({deleting: false}));\n    };\n\n    handleRowClick = (record) => {\n        const {id} = record;\n        this.setState({selectedRoleId: id, selectedKeys: []});\n        // 根据id 获取 role对应的菜单权限\n        const params = {roleId: id};\n        this.setState({loadingRoleMenu: true});\n        this.props.ajax.get('/mock/roles/menus', params)\n            .then(res => {\n                this.setState({selectedKeys: res});\n            })\n            .finally(() => this.setState({loadingRoleMenu: false}));\n    };\n\n    handleSaveRoleMenu = () => {\n        const {selectedKeys} = this.state;\n\n        const params = {ids: selectedKeys};\n        this.setState({loading: true});\n        this.props.ajax.post('/mock/roles/menus', params, {successTip: '保存角色权限成功！'})\n            .then(res => {\n\n            })\n            .finally(() => this.setState({loading: false}));\n    };\n\n    render() {\n        const {\n            loading,\n            dataSource,\n            visible,\n            id,\n            selectedRoleId,\n            selectedKeys,\n            loadingRoleMenu,\n        } = this.state;\n\n        const {form} = this.props;\n        const formProps = {\n            form,\n            width: 220,\n            style: {paddingLeft: 16},\n        };\n\n        const selectedRoleName = dataSource.find(item => item.id === selectedRoleId)?.name;\n\n        return (\n            <PageContent styleName=\"root\" loading={loading || loadingRoleMenu}>\n                <QueryBar>\n                    <Form onFinish={this.handleSubmit} ref={form => this.form = form}>\n                        <FormRow>\n                            <FormElement\n                                {...formProps}\n                                label=\"角色名\"\n                                name=\"name\"\n                            />\n                            <FormElement layout>\n                                <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n                                <Button onClick={() => this.form.resetFields()}>重置</Button>\n                                <Button type=\"primary\" onClick={() => this.setState({visible: true, id: null})}>添加</Button>\n                            </FormElement>\n                            <div styleName=\"role-menu-tip\">\n                                {selectedRoleName ? <span>当前角色权限：「{selectedRoleName}」</span> : <span>请在左侧列表中选择一个角色！</span>}\n                                <Button disabled={!selectedRoleName} type=\"primary\" onClick={this.handleSaveRoleMenu}>保存权限</Button>\n                            </div>\n                        </FormRow>\n                    </Form>\n                </QueryBar>\n                <Row>\n                    <Col span={14}>\n                        <Table\n                            rowClassName={record => {\n                                if (record.id === selectedRoleId) return 'role-table selected';\n\n                                return 'role-table';\n                            }}\n                            serialNumber\n                            columns={this.columns}\n                            dataSource={dataSource}\n                            rowKey=\"id\"\n                            onRow={(record, index) => {\n                                return {\n                                    onClick: () => this.handleRowClick(record, index),\n                                };\n                            }}\n                        />\n                    </Col>\n                    <Col span={10}>\n                        <MenuSelect\n                            value={selectedKeys}\n                            onChange={selectedKeys => this.setState({selectedKeys})}\n                        />\n                    </Col>\n                </Row>\n                <EditModal\n                    visible={visible}\n                    id={id}\n                    isEdit={id !== null}\n                    onOk={() => this.setState({visible: false}, this.form.submit)}\n                    onCancel={() => this.setState({visible: false})}\n                />\n            </PageContent>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"root-fIjVT\",\"role-menu-tip\":\"role-menu-tip-2A5Pr\"};"],"sourceRoot":""}